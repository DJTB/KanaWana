{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b082e129cfc88dbcc009","webpack:///./src/index.js","webpack:///./src/utils.js","webpack:///./src/constants.js","webpack:///./src/core.js","webpack:///./src/characterTables.js"],"names":["bind","input","options","addEventListener","event","onInput","unbind","removeEventListener","config","Object","assign","IMEMode","target","normalizedInputString","value","newText","selectionStart","selectionEnd","length","createTextRange","focus","range","collapse","select","katakanaToHiragana","hiraganaToKatakana","romajiToHiragana","romajiToKana","isHiragana","isKatakana","isKana","isKanjiKana","isRomaji","isMixed","isKanji","toHiragana","toKatakana","toKana","toRomaji","stripOkurigana","getChunk","getChunkSize","isCharUpperCase","isCharInRange","isCharVowel","isCharConsonant","isCharLongDash","isCharSlashDot","isCharKatakana","isCharHiragana","isCharKana","isCharKanji","isCharJapanesePunctuation","isCharEnglishPunctuation","isCharPunctuation","convertFullwidthCharsToASCII","text","start","end","slice","max","remaining","Math","min","char","code","charCodeAt","includeY","regexp","toLowerCase","charAt","search","some","asciiChars","split","map","lower","upper","String","fromCharCode","join","ENGLISH_PUNCTUATION_RANGES","JAPANESE_FULLWIDTH_PUNCTUATION_RANGES","LOWERCASE_START","LOWERCASE_END","UPPERCASE_START","UPPERCASE_END","HIRAGANA_START","HIRAGANA_END","KATAKANA_START","KATAKANA_END","KANJI_START","KANJI_END","LOWERCASE_FULLWIDTH_START","LOWERCASE_FULLWIDTH_END","UPPERCASE_FULLWIDTH_START","UPPERCASE_FULLWIDTH_END","PROLONGED_SOUND_MARK","KANA_SLASH_DOT","KANJI_KANA_REGEX","defaultOptions","useObsoleteKana","passRomaji","kata","hira","previousKana","iterable","index","kataChar","slashDot","longDash","push","romaji","hiraganaToRomaji","hiraChar","forEach","roma","every","test","passKanji","chars","hasKanji","len","cursor","maxChunk","chunkSize","chunk","romaChar","nextCharIsDoubleConsonant","convertThisChunkToUppercase","convertKatakanaToUppercase","concat","toUpperCase","ignoreCase","kana","chunkLC","kanaChar","includes","all","filter","reverseChars","reverse","i","longVowels","a","u","e","o","fourCharacterEdgeCases","RtoJ","JtoR"],"mappings":"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","file":"kanawana.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"kanawana\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kanawana\"] = factory();\n\telse\n\t\troot[\"kanawana\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b082e129cfc88dbcc009","import { convertFullwidthCharsToASCII } from './utils';\n\nimport {\n  defaultOptions,\n  katakanaToHiragana,\n  hiraganaToKatakana,\n  romajiToHiragana,\n  romajiToKana,\n  isHiragana,\n  isKatakana,\n  isKana,\n  isKanjiKana,\n  isRomaji,\n  isMixed,\n  isKanji,\n  toHiragana,\n  toKatakana,\n  toKana,\n  toRomaji,\n  stripOkurigana,\n} from './core';\n\n/**\n * Binds eventListener for 'input' events to an input field to automagically replace values with kana\n * @param  {HTMLElement} input textarea, input[type=\"text\"] etc\n * @param  {Object} [options={}] user config overrides\n */\nfunction bind(input, options = {}) {\n  input.addEventListener('input', (event) => onInput(event, options));\n}\n\n/**\n * Unbinds eventListener from input field\n * @param  {HTMLElement} input textarea, input[type=\"text\"] etc\n */\nfunction unbind(input) {\n  input.removeEventListener('input', onInput);\n}\n\n/**\n * Automagically replaces input values with converted text to kana\n * @param  {Object} event DOM event to listen to\n * @param  {Object} [options={}] user config overrides\n */\nfunction onInput(event, options = {}) {\n  const config = Object.assign({}, defaultOptions, options, { IMEMode: true });\n  const input = event.target;\n  // const startingCursor = input.selectionStart;\n  // const startingLength = input.value.length;\n  const normalizedInputString = convertFullwidthCharsToASCII(input.value);\n  const newText = toKana(normalizedInputString, config);\n  if (normalizedInputString !== newText) {\n    input.value = newText;\n    if (typeof input.selectionStart === 'number') {\n      input.selectionStart = input.selectionEnd = input.value.length;\n      return;\n    }\n    if (typeof input.createTextRange !== 'undefined') {\n      input.focus();\n      const range = input.createTextRange();\n      range.collapse(false);\n      range.select();\n    }\n  }\n}\n\nexport {\n  bind,\n  unbind,\n  katakanaToHiragana,\n  hiraganaToKatakana,\n  romajiToHiragana,\n  romajiToKana,\n  isHiragana,\n  isKatakana,\n  isKana,\n  isKanjiKana,\n  isRomaji,\n  isMixed,\n  isKanji,\n  toHiragana,\n  toKatakana,\n  toKana,\n  toRomaji,\n  stripOkurigana,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import {\n  ENGLISH_PUNCTUATION_RANGES,\n  JAPANESE_FULLWIDTH_PUNCTUATION_RANGES,\n  HIRAGANA_START,\n  HIRAGANA_END,\n  KATAKANA_START,\n  KATAKANA_END,\n  KANJI_START,\n  KANJI_END,\n  PROLONGED_SOUND_MARK,\n  KANA_SLASH_DOT,\n  LOWERCASE_FULLWIDTH_START,\n  LOWERCASE_FULLWIDTH_END,\n  LOWERCASE_START,\n  UPPERCASE_FULLWIDTH_START,\n  UPPERCASE_FULLWIDTH_END,\n  UPPERCASE_START,\n  UPPERCASE_END,\n} from './constants';\n\n/**\n * Returns a substring based on start/end values\n * @param  {String} text\n * @param  {Number} start index\n * @param  {Number} end index\n * @return {String} new substring\n */\nexport function getChunk(text, start, end) {\n  return text.slice(start, end);\n}\n\n/**\n * Don't pick a chunk that is bigger than the remaining characters.\n * @param  {Number} max index limit\n * @param  {Number} remaining\n * @return {Number}\n */\nexport function getChunkSize(max, remaining) {\n  return Math.min(max, remaining);\n}\n\n/**\n * Checks if char is in English unicode uppercase range\n * @param  {String} char\n * @return {Boolean}\n */\nexport function isCharUpperCase(char) {\n  return isCharInRange(char, UPPERCASE_START, UPPERCASE_END);\n}\n\n/**\n * Takes a character and a unicode range. Returns true if the char is in the range.\n * @param  {String}  char  unicode character\n * @param  {Number}  start unicode start range\n * @param  {Number}  end   unicode end range\n * @return {Boolean}\n */\nexport function isCharInRange(char, start, end) {\n  const code = char.charCodeAt(0);\n  return start <= code && code <= end;\n}\n\n/**\n * Tests a character and an english vowel. Returns true if the char is a vowel.\n * @param  {String} char\n * @param  {Boolean} [includeY=true] Optional parameter to include y as a vowel in test\n * @return {Boolean}\n */\nexport function isCharVowel(char, includeY = true) {\n  const regexp = includeY ? /[aeiouy]/ : /[aeiou]/;\n  return char.toLowerCase().charAt(0).search(regexp) !== -1;\n}\n\n/**\n * Tests a character and an english consonant. Returns true if the char is a consonant.\n * @param  {String} char\n * @param  {Boolean} [includeY=true] Optional parameter to include y as a consonant in test\n * @return {Boolean}\n */\nexport function isCharConsonant(char, includeY = true) {\n  const regexp = includeY ? /[bcdfghjklmnpqrstvwxyz]/ : /[bcdfghjklmnpqrstvwxz]/;\n  return char.toLowerCase().charAt(0).search(regexp) !== -1;\n}\n\n/**\n * Returns true if char is 'ー'\n * @param  {String} char\n * @return {Boolean}\n */\nexport function isCharLongDash(char) {\n  return char.charCodeAt(0) === PROLONGED_SOUND_MARK;\n}\n\n/**\n * Returns true if char is '・'\n * @param  {String} char\n * @return {Boolean}\n */\nexport function isCharSlashDot(char) {\n  return char.charCodeAt(0) === KANA_SLASH_DOT;\n}\n\n/**\n * Tests a character. Returns true if the character is katakana.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nexport function isCharKatakana(char) {\n  return isCharInRange(char, KATAKANA_START, KATAKANA_END);\n}\n\n/**\n * Tests a character. Returns true if the character is Hiragana.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nexport function isCharHiragana(char) {\n  if (isCharLongDash(char)) return true;\n  return isCharInRange(char, HIRAGANA_START, HIRAGANA_END);\n}\n\n/**\n * Tests a character. Returns true if the character is hiragana or katakana.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nexport function isCharKana(char) {\n  return isCharHiragana(char) || isCharKatakana(char);\n}\n\n/**\n * Tests a character. Returns true if the character is a CJK ideograph (kanji).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nexport function isCharKanji(char) {\n  return isCharInRange(char, KANJI_START, KANJI_END);\n}\n\n/**\n * Tests a character. Returns true if the character is considered Japanese punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nexport function isCharJapanesePunctuation(char) {\n  return JAPANESE_FULLWIDTH_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\n/**\n * Tests a character. Returns true if the character is considered English punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nexport function isCharEnglishPunctuation(char) {\n  return ENGLISH_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\n/**\n * Tests a character. Returns true if the character is considered Japanese or English punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nexport function isCharPunctuation(char) {\n  return isCharEnglishPunctuation(char) || isCharJapanesePunctuation(char);\n}\n\n/**\n * Converts all fullwidth roman letters in string to proper ASCII\n * @param  {String} text Full Width roman letters\n * @return {String} ASCII\n */\nexport function convertFullwidthCharsToASCII(text) {\n  const asciiChars = text.split('').map((char) => {\n    const code = char.charCodeAt(0);\n    const lower = isCharInRange(char, LOWERCASE_FULLWIDTH_START, LOWERCASE_FULLWIDTH_END);\n    const upper = isCharInRange(char, UPPERCASE_FULLWIDTH_START, UPPERCASE_FULLWIDTH_END);\n    if (lower) {\n      return String.fromCharCode((code - LOWERCASE_FULLWIDTH_START) + LOWERCASE_START);\n    } else if (upper) {\n      return String.fromCharCode((code - UPPERCASE_FULLWIDTH_START) + UPPERCASE_START);\n    }\n    return char;\n  });\n\n  return asciiChars.join('');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","// References\n// http://unicode-table.com\n// http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n\nconst ENGLISH_PUNCTUATION_RANGES = [\n  [0x21, 0x2F],\n  [0x3A, 0x3F],\n  [0x5B, 0x60],\n  [0x7B, 0x7E],\n];\nconst JAPANESE_FULLWIDTH_PUNCTUATION_RANGES = [\n  [0x3001, 0x303E],\n  [0x30FB, 0x30FC],\n  [0xFF01, 0xFF0F],\n  [0xFF1A, 0xFF1F],\n  [0xFF3B, 0xFF3F],\n  [0xFF5B, 0xFF60],\n];\nconst LOWERCASE_START = 0x61;\nconst LOWERCASE_END = 0x7A;\nconst UPPERCASE_START = 0x41;\nconst UPPERCASE_END = 0x5A;\nconst HIRAGANA_START = 0x3041;\nconst HIRAGANA_END = 0x3096;\nconst KATAKANA_START = 0x30A1;\nconst KATAKANA_END = 0x30FC;\nconst KANJI_START = 0x4E00;\nconst KANJI_END = 0x9FAF;\nconst LOWERCASE_FULLWIDTH_START = 0xFF41;\nconst LOWERCASE_FULLWIDTH_END = 0xFF5A;\nconst UPPERCASE_FULLWIDTH_START = 0xFF21;\nconst UPPERCASE_FULLWIDTH_END = 0xFF3A;\nconst PROLONGED_SOUND_MARK = 0x30FC;\nconst KANA_SLASH_DOT = 0x30FB;\n\n// All Japanese regex, for mixes of kanji and kana like \"泣き虫\"\n// Includes Japanese full-width punctuation ranges\n// doesn't include *half-width katakana / roman letters* since they should be considered typos\nconst KANJI_KANA_REGEX = /[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff01-\\uff0f\\u4e00-\\u9faf\\u3400-\\u4dbf]/;\n\nexport {\n  ENGLISH_PUNCTUATION_RANGES,\n  JAPANESE_FULLWIDTH_PUNCTUATION_RANGES,\n  LOWERCASE_START,\n  LOWERCASE_END,\n  UPPERCASE_START,\n  UPPERCASE_END,\n  HIRAGANA_START,\n  HIRAGANA_END,\n  KATAKANA_START,\n  KATAKANA_END,\n  KANJI_START,\n  KANJI_END,\n  LOWERCASE_FULLWIDTH_START,\n  LOWERCASE_FULLWIDTH_END,\n  UPPERCASE_FULLWIDTH_START,\n  UPPERCASE_FULLWIDTH_END,\n  PROLONGED_SOUND_MARK,\n  KANA_SLASH_DOT,\n  KANJI_KANA_REGEX,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","import {\n  HIRAGANA_START,\n  KATAKANA_START,\n  UPPERCASE_END,\n  UPPERCASE_START,\n  KANJI_KANA_REGEX,\n} from './constants';\n\nimport {\n  fourCharacterEdgeCases,\n  longVowels,\n  JtoR,\n  RtoJ,\n} from './characterTables';\n\nimport {\n  getChunk,\n  getChunkSize,\n  isCharLongDash,\n  isCharSlashDot,\n  isCharConsonant,\n  isCharPunctuation,\n  isCharHiragana,\n  isCharKana,\n  isCharKanji,\n  isCharInRange,\n  isCharKatakana,\n  isCharVowel,\n  isCharUpperCase,\n} from './utils';\n\n/**\n * Default config for KanaWana, user passed options will be merged with this\n * @type {Object}\n */\nexport const defaultOptions = {\n  // Set to true to use obsolete characters, such as ゐ and ゑ.\n  useObsoleteKana: false,\n  // Set to true to pass romaji when using mixed syllabaries with toKatakana() or toHiragana(),\n  // so: \"romaji is not ヒラガナ\" -> \"romaji is not ひらがな\"\n  passRomaji: false,\n  // Set to true to handle input from a text input as it is typed.\n  IMEMode: false,\n};\n\n/**\n * Convert katakana to hiragana\n * @param  {String} kata text input\n * @return {String} converted text\n */\nexport function katakanaToHiragana(kata) {\n  const hira = [];\n  let previousKana = '';\n  const iterable = kata.split('');\n  for (let index = 0; index < iterable.length; index += 1) {\n    const kataChar = iterable[index];\n    const [slashDot, longDash] = [isCharSlashDot(kataChar), isCharLongDash(kataChar)];\n    // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n    if (slashDot || (longDash && index < 1)) {\n      hira.push(kataChar);\n    // Transform long vowels: 'オー' to 'おう'\n    } else if (longDash && index > 0) {\n      // Transform previousKana back to romaji\n      const romaji = hiraganaToRomaji(previousKana).slice(-1);\n      hira.push(longVowels[romaji]);\n    } else if (isCharKatakana(kataChar)) {\n      // Shift charcode.\n      const code = kataChar.charCodeAt(0) + (HIRAGANA_START - KATAKANA_START);\n      const hiraChar = String.fromCharCode(code);\n      hira.push(hiraChar);\n      previousKana = hiraChar;\n    } else {\n      // Pass non katakana chars through\n      hira.push(kataChar);\n      previousKana = '';\n    }\n  }\n  return hira.join('');\n}\n\n/**\n * Convert hiragana to katakana\n * @param  {String} hira text input\n * @return {String} converted text\n */\nexport function hiraganaToKatakana(hira) {\n  const kata = [];\n  hira.split('').forEach((hiraChar) => {\n    // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n    if (isCharLongDash(hiraChar) || isCharSlashDot(hiraChar)) {\n      kata.push(hiraChar);\n    } else if (isCharHiragana(hiraChar)) {\n      // Shift charcode.\n      const code = hiraChar.charCodeAt(0) + (KATAKANA_START - HIRAGANA_START);\n      const kataChar = String.fromCharCode(code);\n      kata.push(kataChar);\n    } else {\n      // Pass non hiragana chars through\n      kata.push(hiraChar);\n    }\n  });\n  return kata.join('');\n}\n\n/**\n * Convert romaji to hiragana\n * @param  {String} roma text input\n * @param  {Object}\n * @return {String} converted text\n */\nexport function romajiToHiragana(roma, options = {}) {\n  return romajiToKana(roma, options, true);\n}\n\nexport function isHiragana(input) {\n  return [...input].every(isCharHiragana);\n}\n\nexport function isKatakana(input) {\n  return [...input].every(isCharKatakana);\n}\n\nexport function isKana(input) {\n  return [...input].every(isCharKana);\n}\n\nexport function isRomaji(input) {\n  return [...input].every((char) =>\n    !isHiragana(char) && !isKatakana(char) && !isKanji(char)\n  );\n}\n\nexport function isKanji(input) {\n  return [...input].every(isCharKanji);\n}\n\n// Test if input is All Japanese, for mixes of kanji and kana like \"泣き虫。\"\n// Includes Japanese full-width punctuation ranges\nexport function isKanjiKana(input) {\n  return [...input].every((char) => KANJI_KANA_REGEX.test(char));\n}\n\n/**\n * Test if input is a mix of kana and romaji, defaults to skip kanji\n * @param  {String} input text\n * @param  {Object} [options={ passKanji: true }] optional config to skip over kanji\n * @return {Boolean} true if input is mixed\n */\nexport function isMixed(input, options = { passKanji: true }) {\n  const chars = [...input];\n  let hasKanji = false;\n  if (!options.passKanji) {\n    hasKanji = chars.some(isKanji);\n  }\n  return (chars.some(isHiragana) || chars.some(isKatakana)) && chars.some(isRomaji) && !hasKanji;\n}\n\nexport function toHiragana(input, options = {}) {\n  const config = Object.assign({}, defaultOptions, options);\n  if (config.passRomaji) return katakanaToHiragana(input);\n  if (isRomaji(input)) return romajiToHiragana(input, config);\n  if (isMixed(input, { passKanji: true })) {\n    const romaji = katakanaToHiragana(input);\n    return romajiToHiragana(romaji, config);\n  }\n  return katakanaToHiragana(input);\n}\n\nexport function toKatakana(input, options = {}) {\n  const config = Object.assign({}, defaultOptions, options);\n  if (config.passRomaji) return hiraganaToKatakana(input);\n  if (isRomaji(input) || isMixed(input)) {\n    const romaji = romajiToHiragana(input, config);\n    return hiraganaToKatakana(romaji);\n  }\n  return hiraganaToKatakana(input);\n}\n\nexport function toKana(input, options) {\n  return romajiToKana(input, options);\n}\n\nexport function toRomaji(input, options) {\n  return hiraganaToRomaji(input, options);\n}\n\nfunction hiraganaToRomaji(hira, options = {}) {\n  // merge options with default options\n  const config = Object.assign({}, defaultOptions, options);\n  const len = hira.length;\n  // Final output array\n  const roma = [];\n  // Position in the string that is being evaluated\n  let cursor = 0;\n  const maxChunk = 2;\n  let chunkSize = 2;\n  let chunk = '';\n  let romaChar = '';\n  let nextCharIsDoubleConsonant;\n\n  while (cursor < len) {\n    chunkSize = getChunkSize(maxChunk, len - cursor);\n    let convertThisChunkToUppercase = false;\n    while (chunkSize > 0) {\n      chunk = getChunk(hira, cursor, cursor + chunkSize);\n      if (isKatakana(chunk)) {\n        convertThisChunkToUppercase = config.convertKatakanaToUppercase;\n        chunk = katakanaToHiragana(chunk);\n      }\n      // special case for small tsus\n      if (chunk.charAt(0) === 'っ' && chunkSize === 1 && cursor < (len - 1)) {\n        nextCharIsDoubleConsonant = true;\n        romaChar = '';\n        break;\n      }\n\n      romaChar = JtoR[chunk];\n\n      if ((romaChar != null) && nextCharIsDoubleConsonant) {\n        romaChar = romaChar.charAt(0).concat(romaChar);\n        nextCharIsDoubleConsonant = false;\n      }\n      // console.log(`${cursor}x${chunkSize}:${chunk} => ${romaChar}`);\n      if (romaChar != null) {\n        break;\n      }\n      chunkSize -= 1;\n    }\n    if (romaChar == null) {\n      // Passthrough undefined values\n      romaChar = chunk;\n    }\n\n    if (convertThisChunkToUppercase) {\n      romaChar = romaChar.toUpperCase();\n    }\n    roma.push(romaChar);\n    cursor += chunkSize || 1;\n  }\n\n  return roma.join('');\n}\n\nexport function romajiToKana(roma, options = {}, ignoreCase = false) {\n  const config = Object.assign({}, defaultOptions, options);\n  // Final output array\n  const kana = [];\n  // Position in the string that is being evaluated\n  let cursor = 0;\n  const len = roma.length;\n  const maxChunk = 3;\n  let chunkSize = 3;\n  let chunk = '';\n  let chunkLC = '';\n\n  // Steps through the string pulling out chunks of characters. Each chunk will be evaluated\n  // against the romaji to kana table. If there is no match, the last character in the chunk\n  // is dropped and the chunk is reevaluated. If nothing matches, the character is assumed\n  // to be invalid or punctuation or other and gets passed through.\n  while (cursor < len) {\n    let kanaChar = null;\n    chunkSize = getChunkSize(maxChunk, len - cursor);\n    while (chunkSize > 0) {\n      chunk = getChunk(roma, cursor, cursor + chunkSize);\n      chunkLC = chunk.toLowerCase();\n      // Handle super-rare edge cases with 4 char chunks (like ltsu, chya, shya)\n      if (fourCharacterEdgeCases.includes(chunkLC) && (len - cursor) >= 4) {\n        chunkSize += 1;\n        chunk = getChunk(roma, cursor, cursor + chunkSize);\n        chunkLC = chunk.toLowerCase();\n      } else {\n        // Handle edge case of n followed by consonant\n        if (chunkLC.charAt(0) === 'n') {\n          if (chunkSize === 2) {\n            // Handle edge case of n followed by a space (only if not in IME mode)\n            if (!config.IMEMode && chunkLC.charAt(1) === ' ') {\n              kanaChar = 'ん ';\n              break;\n            }\n            // Convert IME input of n' to \"ん\"\n            if (config.IMEMode && chunkLC === \"n'\") {\n              kanaChar = 'ん';\n              break;\n            }\n          }\n          // Handle edge case of n followed by n and vowel\n          if (isCharConsonant(chunkLC.charAt(1), false) && isCharVowel(chunkLC.charAt(2))) {\n            chunkSize = 1;\n            chunk = getChunk(roma, cursor, cursor + chunkSize);\n            chunkLC = chunk.toLowerCase();\n          }\n        }\n\n        // Handle case of double consonants\n        if (chunkLC.charAt(0) !== 'n' &&\n          isCharConsonant(chunkLC.charAt(0)) &&\n          chunk.charAt(0) === chunk.charAt(1)\n        ) {\n          chunkSize = 1;\n          // Return katakana ッ if chunk is uppercase, otherwise return hiragana っ\n          if (isCharInRange(chunk.charAt(0), UPPERCASE_START, UPPERCASE_END)) {\n            chunkLC = chunk = 'ッ';\n          } else {\n            chunkLC = chunk = 'っ';\n          }\n        }\n      }\n\n      kanaChar = RtoJ[chunkLC];\n      // console.log(`${cursor}x${chunkSize}:${chunk} => ${kanaChar}`); // DEBUG\n      if (kanaChar != null) {\n        break;\n      }\n      // Step down the chunk size.\n      // If chunkSize was 4, step down twice.\n      if (chunkSize === 4) {\n        chunkSize -= 2;\n      } else {\n        chunkSize -= 1;\n      }\n    }\n\n    // Passthrough undefined values\n    if (kanaChar == null) {\n      kanaChar = chunk;\n    }\n\n    // Handle special cases.\n    if (config.useObsoleteKana) {\n      if (chunkLC === 'wi') kanaChar = 'ゐ';\n      if (chunkLC === 'we') kanaChar = 'ゑ';\n    }\n\n    if (!!config.IMEMode && chunkLC.charAt(0) === 'n') {\n      if ((roma.charAt(cursor + 1).toLowerCase() === 'y' &&\n        isCharVowel(roma.charAt(cursor + 2)) === false) ||\n        cursor === (len - 1) ||\n        isKana(roma.charAt(cursor + 1))\n      ) {\n        // Don't transliterate this yet.\n        kanaChar = chunk.charAt(0);\n      }\n    }\n\n    // Use katakana if first letter in chunk is uppercase\n    if (!ignoreCase) {\n      if (isCharUpperCase(chunk.charAt(0))) {\n        kanaChar = hiraganaToKatakana(kanaChar);\n      }\n    }\n\n    kana.push(kanaChar);\n    cursor += chunkSize || 1;\n  }\n\n  return kana.join('');\n}\n\n/**\n * Strips trailing okurigana if input is a mix of kanji and kana\n * @param  {String} input text to parse\n * @param  {Object} [options={ all: false }] config object specifying if *all* kana should be removed\n * @return {String} string new string with trailing okurigana removed\n */\nexport function stripOkurigana(input, options = { all: false }) {\n  if (!isKanjiKana(input) || isKana(input)) return input;\n  const chars = [...input];\n\n  // strip every kana\n  if (options.all) return chars.filter((char) => !isCharKana(char)).join('');\n\n  // strip trailing only\n  const reverseChars = chars.reverse();\n  for (let i = 0, len = reverseChars.length; i < len; i += 1) {\n    const char = reverseChars[i];\n    // pass if it's punctuation\n    if (isCharPunctuation(char)) continue; // eslint-disable-line no-continue\n    // blank out if not kanji\n    if (!isKanji(char)) {\n      reverseChars[i] = '';\n    } else break; // stop when we hit a kanji char\n  }\n\n  return reverseChars.reverse().join('');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core.js","const longVowels = {\n  a: 'あ',\n  i: 'い',\n  u: 'う',\n  e: 'え',\n  o: 'う',\n};\n\nconst fourCharacterEdgeCases = [\n  'lts',\n  'chy',\n  'shy',\n];\n\nconst RtoJ = {\n  '.': '。',\n  ',': '、',\n  '/': '・',\n  '!': '！',\n  '?': '？',\n  '-': 'ー',\n  '[': '「',\n  ']': '」',\n  '(': '（',\n  ')': '）',\n  '{': '｛',\n  '}': '｝',\n\n  'a': 'あ',\n  'i': 'い',\n  'u': 'う',\n  'e': 'え',\n  'o': 'お',\n  'yi': 'い',\n  'wu': 'う',\n  'whu': 'う',\n  'xa': 'ぁ',\n  'xi': 'ぃ',\n  'xu': 'ぅ',\n  'xe': 'ぇ',\n  'xo': 'ぉ',\n  'xyi': 'ぃ',\n  'xye': 'ぇ',\n  'ye': 'いぇ',\n  'wha': 'うぁ',\n  'whi': 'うぃ',\n  'whe': 'うぇ',\n  'who': 'うぉ',\n  'wi': 'うぃ',\n  'we': 'うぇ',\n  'va': 'ゔぁ',\n  'vi': 'ゔぃ',\n  'vu': 'ゔ',\n  've': 'ゔぇ',\n  'vo': 'ゔぉ',\n  'vya': 'ゔゃ',\n  'vyi': 'ゔぃ',\n  'vyu': 'ゔゅ',\n  'vye': 'ゔぇ',\n  'vyo': 'ゔょ',\n  'ka': 'か',\n  'ki': 'き',\n  'ku': 'く',\n  'ke': 'け',\n  'ko': 'こ',\n  'lka': 'ヵ',\n  'lke': 'ヶ',\n  'xka': 'ヵ',\n  'xke': 'ヶ',\n  'kya': 'きゃ',\n  'kyi': 'きぃ',\n  'kyu': 'きゅ',\n  'kye': 'きぇ',\n  'kyo': 'きょ',\n  'ca': 'か',\n  'ci': 'き',\n  'cu': 'く',\n  'ce': 'け',\n  'co': 'こ',\n  'lca': 'ヵ',\n  'lce': 'ヶ',\n  'xca': 'ヵ',\n  'xce': 'ヶ',\n  'qya': 'くゃ',\n  'qyu': 'くゅ',\n  'qyo': 'くょ',\n  'qwa': 'くぁ',\n  'qwi': 'くぃ',\n  'qwu': 'くぅ',\n  'qwe': 'くぇ',\n  'qwo': 'くぉ',\n  'qa': 'くぁ',\n  'qi': 'くぃ',\n  'qe': 'くぇ',\n  'qo': 'くぉ',\n  'kwa': 'くぁ',\n  'qyi': 'くぃ',\n  'qye': 'くぇ',\n  'ga': 'が',\n  'gi': 'ぎ',\n  'gu': 'ぐ',\n  'ge': 'げ',\n  'go': 'ご',\n  'gya': 'ぎゃ',\n  'gyi': 'ぎぃ',\n  'gyu': 'ぎゅ',\n  'gye': 'ぎぇ',\n  'gyo': 'ぎょ',\n  'gwa': 'ぐぁ',\n  'gwi': 'ぐぃ',\n  'gwu': 'ぐぅ',\n  'gwe': 'ぐぇ',\n  'gwo': 'ぐぉ',\n  'sa': 'さ',\n  'si': 'し',\n  'shi': 'し',\n  'su': 'す',\n  'se': 'せ',\n  'so': 'そ',\n  'za': 'ざ',\n  'zi': 'じ',\n  'zu': 'ず',\n  'ze': 'ぜ',\n  'zo': 'ぞ',\n  'ji': 'じ',\n  'sya': 'しゃ',\n  'syi': 'しぃ',\n  'syu': 'しゅ',\n  'sye': 'しぇ',\n  'syo': 'しょ',\n  'sha': 'しゃ',\n  'shu': 'しゅ',\n  'she': 'しぇ',\n  'sho': 'しょ',\n  'shya': 'しゃ', // 4 character code\n  'shyu': 'しゅ', // 4 character code\n  'shye': 'しぇ', // 4 character code\n  'shyo': 'しょ', // 4 character code\n  'swa': 'すぁ',\n  'swi': 'すぃ',\n  'swu': 'すぅ',\n  'swe': 'すぇ',\n  'swo': 'すぉ',\n  'zya': 'じゃ',\n  'zyi': 'じぃ',\n  'zyu': 'じゅ',\n  'zye': 'じぇ',\n  'zyo': 'じょ',\n  'ja': 'じゃ',\n  'ju': 'じゅ',\n  'je': 'じぇ',\n  'jo': 'じょ',\n  'jya': 'じゃ',\n  'jyi': 'じぃ',\n  'jyu': 'じゅ',\n  'jye': 'じぇ',\n  'jyo': 'じょ',\n  'ta': 'た',\n  'ti': 'ち',\n  'tu': 'つ',\n  'te': 'て',\n  'to': 'と',\n  'chi': 'ち',\n  'tsu': 'つ',\n  'ltu': 'っ',\n  'xtu': 'っ',\n  'tya': 'ちゃ',\n  'tyi': 'ちぃ',\n  'tyu': 'ちゅ',\n  'tye': 'ちぇ',\n  'tyo': 'ちょ',\n  'cha': 'ちゃ',\n  'chu': 'ちゅ',\n  'che': 'ちぇ',\n  'cho': 'ちょ',\n  'cya': 'ちゃ',\n  'cyi': 'ちぃ',\n  'cyu': 'ちゅ',\n  'cye': 'ちぇ',\n  'cyo': 'ちょ',\n  'chya': 'ちゃ', // 4 character code\n  'chyu': 'ちゅ', // 4 character code\n  'chye': 'ちぇ', // 4 character code\n  'chyo': 'ちょ', // 4 character code\n  'tsa': 'つぁ',\n  'tsi': 'つぃ',\n  'tse': 'つぇ',\n  'tso': 'つぉ',\n  'tha': 'てゃ',\n  'thi': 'てぃ',\n  'thu': 'てゅ',\n  'the': 'てぇ',\n  'tho': 'てょ',\n  'twa': 'とぁ',\n  'twi': 'とぃ',\n  'twu': 'とぅ',\n  'twe': 'とぇ',\n  'two': 'とぉ',\n  'da': 'だ',\n  'di': 'ぢ',\n  'du': 'づ',\n  'de': 'で',\n  'do': 'ど',\n  'dya': 'ぢゃ',\n  'dyi': 'ぢぃ',\n  'dyu': 'ぢゅ',\n  'dye': 'ぢぇ',\n  'dyo': 'ぢょ',\n  'dha': 'でゃ',\n  'dhi': 'でぃ',\n  'dhu': 'でゅ',\n  'dhe': 'でぇ',\n  'dho': 'でょ',\n  'dwa': 'どぁ',\n  'dwi': 'どぃ',\n  'dwu': 'どぅ',\n  'dwe': 'どぇ',\n  'dwo': 'どぉ',\n  'na': 'な',\n  'ni': 'に',\n  'nu': 'ぬ',\n  'ne': 'ね',\n  'no': 'の',\n  'nya': 'にゃ',\n  'nyi': 'にぃ',\n  'nyu': 'にゅ',\n  'nye': 'にぇ',\n  'nyo': 'にょ',\n  'ha': 'は',\n  'hi': 'ひ',\n  'hu': 'ふ',\n  'he': 'へ',\n  'ho': 'ほ',\n  'fu': 'ふ',\n  'hya': 'ひゃ',\n  'hyi': 'ひぃ',\n  'hyu': 'ひゅ',\n  'hye': 'ひぇ',\n  'hyo': 'ひょ',\n  'fya': 'ふゃ',\n  'fyu': 'ふゅ',\n  'fyo': 'ふょ',\n  'fwa': 'ふぁ',\n  'fwi': 'ふぃ',\n  'fwu': 'ふぅ',\n  'fwe': 'ふぇ',\n  'fwo': 'ふぉ',\n  'fa': 'ふぁ',\n  'fi': 'ふぃ',\n  'fe': 'ふぇ',\n  'fo': 'ふぉ',\n  'fyi': 'ふぃ',\n  'fye': 'ふぇ',\n  'ba': 'ば',\n  'bi': 'び',\n  'bu': 'ぶ',\n  'be': 'べ',\n  'bo': 'ぼ',\n  'bya': 'びゃ',\n  'byi': 'びぃ',\n  'byu': 'びゅ',\n  'bye': 'びぇ',\n  'byo': 'びょ',\n  'pa': 'ぱ',\n  'pi': 'ぴ',\n  'pu': 'ぷ',\n  'pe': 'ぺ',\n  'po': 'ぽ',\n  'pya': 'ぴゃ',\n  'pyi': 'ぴぃ',\n  'pyu': 'ぴゅ',\n  'pye': 'ぴぇ',\n  'pyo': 'ぴょ',\n  'ma': 'ま',\n  'mi': 'み',\n  'mu': 'む',\n  'me': 'め',\n  'mo': 'も',\n  'mya': 'みゃ',\n  'myi': 'みぃ',\n  'myu': 'みゅ',\n  'mye': 'みぇ',\n  'myo': 'みょ',\n  'ya': 'や',\n  'yu': 'ゆ',\n  'yo': 'よ',\n  'xya': 'ゃ',\n  'xyu': 'ゅ',\n  'xyo': 'ょ',\n  'ra': 'ら',\n  'ri': 'り',\n  'ru': 'る',\n  're': 'れ',\n  'ro': 'ろ',\n  'rya': 'りゃ',\n  'ryi': 'りぃ',\n  'ryu': 'りゅ',\n  'rye': 'りぇ',\n  'ryo': 'りょ',\n  'la': 'ら',\n  'li': 'り',\n  'lu': 'る',\n  'le': 'れ',\n  'lo': 'ろ',\n  'lya': 'りゃ',\n  'lyi': 'りぃ',\n  'lyu': 'りゅ',\n  'lye': 'りぇ',\n  'lyo': 'りょ',\n  'wa': 'わ',\n  'wo': 'を',\n  'lwe': 'ゎ',\n  'xwa': 'ゎ',\n  'n': 'ん',\n  'nn': 'ん',\n  'n ': 'ん', // n + space\n  'xn': 'ん',\n  'ltsu': 'っ',  // 4 character code\n};\n\nconst JtoR = {\n  '　': ' ',\n  '！': '!',\n  '？': '?',\n  '。': '.',\n  '・': '/',\n  '、': ',',\n  'ー': '-',\n  '「': '[',\n  '」': ']',\n  '（': '(',\n  '）': ')',\n  '｛': '{',\n  '｝': '}',\n\n  'あ': 'a',\n  'い': 'i',\n  'う': 'u',\n  'え': 'e',\n  'お': 'o',\n  'ゔぁ': 'va',\n  'ゔぃ': 'vi',\n  'ゔ': 'vu',\n  'ゔぇ': 've',\n  'ゔぉ': 'vo',\n  'か': 'ka',\n  'き': 'ki',\n  'きゃ': 'kya',\n  'きぃ': 'kyi',\n  'きゅ': 'kyu',\n  'く': 'ku',\n  'け': 'ke',\n  'こ': 'ko',\n  'が': 'ga',\n  'ぎ': 'gi',\n  'ぐ': 'gu',\n  'げ': 'ge',\n  'ご': 'go',\n  'ぎゃ': 'gya',\n  'ぎぃ': 'gyi',\n  'ぎゅ': 'gyu',\n  'ぎぇ': 'gye',\n  'ぎょ': 'gyo',\n  'さ': 'sa',\n  'す': 'su',\n  'せ': 'se',\n  'そ': 'so',\n  'ざ': 'za',\n  'ず': 'zu',\n  'ぜ': 'ze',\n  'ぞ': 'zo',\n  'し': 'shi',\n  'しゃ': 'sha',\n  'しゅ': 'shu',\n  'しょ': 'sho',\n  'じ': 'ji',\n  'じゃ': 'ja',\n  'じゅ': 'ju',\n  'じょ': 'jo',\n  'た': 'ta',\n  'ち': 'chi',\n  'ちゃ': 'cha',\n  'ちゅ': 'chu',\n  'ちょ': 'cho',\n  'つ': 'tsu',\n  'て': 'te',\n  'と': 'to',\n  'だ': 'da',\n  'ぢ': 'di',\n  'づ': 'du',\n  'で': 'de',\n  'ど': 'do',\n  'な': 'na',\n  'に': 'ni',\n  'にゃ': 'nya',\n  'にゅ': 'nyu',\n  'にょ': 'nyo',\n  'ぬ': 'nu',\n  'ね': 'ne',\n  'の': 'no',\n  'は': 'ha',\n  'ひ': 'hi',\n  'ふ': 'fu',\n  'へ': 'he',\n  'ほ': 'ho',\n  'ひゃ': 'hya',\n  'ひゅ': 'hyu',\n  'ひょ': 'hyo',\n  'ふぁ': 'fa',\n  'ふぃ': 'fi',\n  'ふぇ': 'fe',\n  'ふぉ': 'fo',\n  'ば': 'ba',\n  'び': 'bi',\n  'ぶ': 'bu',\n  'べ': 'be',\n  'ぼ': 'bo',\n  'びゃ': 'bya',\n  'びゅ': 'byu',\n  'びょ': 'byo',\n  'ぱ': 'pa',\n  'ぴ': 'pi',\n  'ぷ': 'pu',\n  'ぺ': 'pe',\n  'ぽ': 'po',\n  'ぴゃ': 'pya',\n  'ぴゅ': 'pyu',\n  'ぴょ': 'pyo',\n  'ま': 'ma',\n  'み': 'mi',\n  'む': 'mu',\n  'め': 'me',\n  'も': 'mo',\n  'みゃ': 'mya',\n  'みゅ': 'myu',\n  'みょ': 'myo',\n  'や': 'ya',\n  'ゆ': 'yu',\n  'よ': 'yo',\n  'ら': 'ra',\n  'り': 'ri',\n  'る': 'ru',\n  'れ': 're',\n  'ろ': 'ro',\n  'りゃ': 'rya',\n  'りゅ': 'ryu',\n  'りょ': 'ryo',\n  'わ': 'wa',\n  'を': 'wo',\n  'ん': 'n',\n\n  // Archaic characters\n  'ゐ': 'wi',\n  'ゑ': 'we',\n\n  // Uncommon character combos\n  'きぇ': 'kye',\n  'きょ': 'kyo',\n  'じぃ': 'jyi',\n  'じぇ': 'jye',\n  'ちぃ': 'cyi',\n  'ちぇ': 'che',\n  'ひぃ': 'hyi',\n  'ひぇ': 'hye',\n  'びぃ': 'byi',\n  'びぇ': 'bye',\n  'ぴぃ': 'pyi',\n  'ぴぇ': 'pye',\n  'みぇ': 'mye',\n  'みぃ': 'myi',\n  'りぃ': 'ryi',\n  'りぇ': 'rye',\n  'にぃ': 'nyi',\n  'にぇ': 'nye',\n  'しぃ': 'syi',\n  'しぇ': 'she',\n  'いぇ': 'ye',\n  'うぁ': 'wha',\n  'うぉ': 'who',\n  'うぃ': 'wi',\n  'うぇ': 'we',\n  'ゔゃ': 'vya',\n  'ゔゅ': 'vyu',\n  'ゔょ': 'vyo',\n  'すぁ': 'swa',\n  'すぃ': 'swi',\n  'すぅ': 'swu',\n  'すぇ': 'swe',\n  'すぉ': 'swo',\n  'くゃ': 'qya',\n  'くゅ': 'qyu',\n  'くょ': 'qyo',\n  'くぁ': 'qwa',\n  'くぃ': 'qwi',\n  'くぅ': 'qwu',\n  'くぇ': 'qwe',\n  'くぉ': 'qwo',\n  'ぐぁ': 'gwa',\n  'ぐぃ': 'gwi',\n  'ぐぅ': 'gwu',\n  'ぐぇ': 'gwe',\n  'ぐぉ': 'gwo',\n  'つぁ': 'tsa',\n  'つぃ': 'tsi',\n  'つぇ': 'tse',\n  'つぉ': 'tso',\n  'てゃ': 'tha',\n  'てぃ': 'thi',\n  'てゅ': 'thu',\n  'てぇ': 'the',\n  'てょ': 'tho',\n  'とぁ': 'twa',\n  'とぃ': 'twi',\n  'とぅ': 'twu',\n  'とぇ': 'twe',\n  'とぉ': 'two',\n  'ぢゃ': 'dya',\n  'ぢぃ': 'dyi',\n  'ぢゅ': 'dyu',\n  'ぢぇ': 'dye',\n  'ぢょ': 'dyo',\n  'でゃ': 'dha',\n  'でぃ': 'dhi',\n  'でゅ': 'dhu',\n  'でぇ': 'dhe',\n  'でょ': 'dho',\n  'どぁ': 'dwa',\n  'どぃ': 'dwi',\n  'どぅ': 'dwu',\n  'どぇ': 'dwe',\n  'どぉ': 'dwo',\n  'ふぅ': 'fwu',\n  'ふゃ': 'fya',\n  'ふゅ': 'fyu',\n  'ふょ': 'fyo',\n\n  //  Small Characters (normally not transliterated alone)\n  'ぁ': 'a',\n  'ぃ': 'i',\n  'ぇ': 'e',\n  'ぅ': 'u',\n  'ぉ': 'o',\n  'ゃ': 'ya',\n  'ゅ': 'yu',\n  'ょ': 'yo',\n  'っ': '',\n  'ゕ': 'ka',\n  'ゖ': 'ka',\n  'ゎ': 'wa',\n\n  // Ambiguous consonant vowel pairs\n  'んあ': 'n\\'a',\n  'んい': 'n\\'i',\n  'んう': 'n\\'u',\n  'んえ': 'n\\'e',\n  'んお': 'n\\'o',\n  'んや': 'n\\'ya',\n  'んゆ': 'n\\'yu',\n  'んよ': 'n\\'yo',\n};\n\nexport {\n  longVowels,\n  fourCharacterEdgeCases,\n  RtoJ,\n  JtoR,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/characterTables.js"],"sourceRoot":""}