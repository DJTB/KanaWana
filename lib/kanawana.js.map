{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1c522ed91621a3861775","webpack:///./src/constants.js","webpack:///./src/utils/isEmpty.js","webpack:///./src/utils/isCharInRange.js","webpack:///./src/core/isRomaji.js","webpack:///./src/core/isKana.js","webpack:///./src/core/isKanji.js","webpack:///./src/core/isKatakana.js","webpack:///./src/core/isRomajiKana.js","webpack:///./src/utils/isCharHiragana.js","webpack:///./src/utils/isCharKatakana.js","webpack:///./src/utils/isCharLongDash.js","webpack:///./src/core/isHiragana.js","webpack:///./src/core/isKanjiKana.js","webpack:///./src/core/toKana.js","webpack:///./src/core/hiraganaToKatakana.js","webpack:///./src/core/katakanaToHiragana.js","webpack:///./src/core/romajiToHiragana.js","webpack:///./src/utils/getChunk.js","webpack:///./src/utils/getChunkSize.js","webpack:///./src/utils/isCharKana.js","webpack:///./src/utils/isCharSlashDot.js","webpack:///./src/core/stripOkurigana.js","webpack:///./src/core/toHiragana.js","webpack:///./src/core/toKatakana.js","webpack:///./src/core/toRomaji.js","webpack:///./src/utils/convertFullwidthCharsToASCII.js","webpack:///./src/index.js","webpack:///./src/utils/isCharConsonant.js","webpack:///./src/utils/isCharEnglishPunctuation.js","webpack:///./src/utils/isCharJapanesePunctuation.js","webpack:///./src/utils/isCharKanji.js","webpack:///./src/utils/isCharPunctuation.js","webpack:///./src/utils/isCharRomaji.js","webpack:///./src/utils/isCharUpperCase.js","webpack:///./src/utils/isCharVowel.js"],"names":["DEFAULT_OPTIONS","useObsoleteKana","passRomaji","upcaseKatakana","IMEMode","KANJI_KANA_REGEX","ROMAJI_REGEX","ENGLISH_PUNCTUATION_RANGES","JAPANESE_FULLWIDTH_PUNCTUATION_RANGES","LOWERCASE_START","LOWERCASE_END","UPPERCASE_START","UPPERCASE_END","HIRAGANA_START","HIRAGANA_END","KATAKANA_START","KATAKANA_END","KANJI_START","KANJI_END","LOWERCASE_FULLWIDTH_START","LOWERCASE_FULLWIDTH_END","UPPERCASE_FULLWIDTH_START","UPPERCASE_FULLWIDTH_END","PROLONGED_SOUND_MARK","KANA_SLASH_DOT","LONG_VOWELS","a","i","u","e","o","FOUR_CHAR_EDGECASES","FROM_ROMAJI","TO_ROMAJI","isEmpty","input","console","warn","JSON","stringify","length","isCharInRange","char","start","end","code","charCodeAt","isRomaji","every","isKana","isKanji","isKatakana","isRomajiKana","options","passKanji","chars","hasKanji","some","isCharHiragana","isCharKatakana","isCharLongDash","isHiragana","isKanjiKana","test","toKana","ignoreCase","config","Object","assign","kana","cursor","len","maxChunk","chunkSize","chunk","chunkLC","kanaChar","toLowerCase","includes","charAt","push","join","hiraganaToKatakana","kata","split","forEach","kataChar","String","fromCharCode","katakanaToHiragana","hira","previousKana","iterable","index","slashDot","longDash","romaji","slice","hiraChar","romajiToHiragana","getChunk","text","getChunkSize","max","remaining","Math","min","isCharKana","isCharSlashDot","stripOkurigana","all","filter","reverseChars","reverse","toHiragana","toKatakana","toRomaji","roma","romaChar","nextCharIsDoubleConsonant","convertThisChunkToUppercase","concat","toUpperCase","convertFullwidthCharsToASCII","asciiChars","map","lower","upper","bind","addEventListener","event","onInput","unbind","removeEventListener","target","normalizedInputString","value","newText","selectionStart","selectionEnd","createTextRange","focus","range","collapse","select","isCharConsonant","includeY","regexp","search","isCharEnglishPunctuation","isCharJapanesePunctuation","isCharKanji","isCharPunctuation","isCharUpperCase","isCharVowel"],"mappings":"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","file":"kanawana.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"kanawana\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kanawana\"] = factory();\n\telse\n\t\troot[\"kanawana\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1c522ed91621a3861775","/**\n  * @typedef {Object} DefaultOptions\n  * @property {Boolean} [useObsoleteKana=false] - Set to true to use obsolete characters, such as ゐ and ゑ.\n  * @example\n  * toHiragana('we', { useObsoleteKana: true })\n  * // => 'ゑ'\n  * @property {Boolean} [passRomaji=false] - Set to true to pass romaji when using mixed syllabaries with toKatakana() or toHiragana()\n  * @example\n  * toHiragana('only convert the katakana: ヒラガナ', { passRomaji: true })\n  * // => \"only convert the katakana: ひらがな\"\n  * @property {Boolean} [upcaseKatakana=false] - Set to true to convert katakana to uppercase using toRomaji()\n  * @example\n  * toRomaji('ひらがな カタカナ', { upcaseKatakana: true })\n  * // => \"hiragana KATAKANA\"\n  * @property {Boolean} [IMEMode=false] - Set to true to handle conversion from a text input as it is being typed\n*/\n\n/**\n * Default config for KanaWana, user passed options will be merged with this\n * @type {DefaultOptions}\n */\nconst DEFAULT_OPTIONS = {\n  useObsoleteKana: false,\n  passRomaji: false,\n  upcaseKatakana: false,\n  IMEMode: false,\n};\n\n// CharCode References\n// http://unicode-table.com\n// http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n\n/**\n * All Japanese regex, for mixes of kanji and kana like \"泣き虫\"\n * Includes Japanese full-width punctuation ranges\n * Doesn't include *half-width katakana / roman letters* since they should be considered typos\n * @type {RegExp}\n */\nconst KANJI_KANA_REGEX = /[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff01-\\uff0f\\u4e00-\\u9faf\\u3400-\\u4dbf]/;\n\n/**\n* Basic Latin unicode regex, for determining Romaji written as Hepburn romanisation\n* Includes upper/lowercase long vowels like \"ā, ī, ū, ē, ō\"\n* @type {RegExp}\n*/\nconst ROMAJI_REGEX = /[\\u0000-\\u007f\\u0100—\\u0101\\u0112—\\u0113\\u012a—\\u012b\\u014c—\\u014d\\u016a—\\u016b]/;\n\nconst ENGLISH_PUNCTUATION_RANGES = [\n  [0x21, 0x2F],\n  [0x3A, 0x3F],\n  [0x5B, 0x60],\n  [0x7B, 0x7E],\n];\nconst JAPANESE_FULLWIDTH_PUNCTUATION_RANGES = [\n  [0x3001, 0x303E],\n  [0x30FB, 0x30FC],\n  [0xFF01, 0xFF0F],\n  [0xFF1A, 0xFF1F],\n  [0xFF3B, 0xFF3F],\n  [0xFF5B, 0xFF60],\n];\nconst LOWERCASE_START = 0x61;\nconst LOWERCASE_END = 0x7A;\nconst UPPERCASE_START = 0x41;\nconst UPPERCASE_END = 0x5A;\nconst HIRAGANA_START = 0x3041;\nconst HIRAGANA_END = 0x3096;\nconst KATAKANA_START = 0x30A1;\nconst KATAKANA_END = 0x30FC;\nconst KANJI_START = 0x4E00;\nconst KANJI_END = 0x9FAF;\nconst LOWERCASE_FULLWIDTH_START = 0xFF41;\nconst LOWERCASE_FULLWIDTH_END = 0xFF5A;\nconst UPPERCASE_FULLWIDTH_START = 0xFF21;\nconst UPPERCASE_FULLWIDTH_END = 0xFF3A;\nconst PROLONGED_SOUND_MARK = 0x30FC;\nconst KANA_SLASH_DOT = 0x30FB;\n\nconst LONG_VOWELS = {\n  a: 'あ',\n  i: 'い',\n  u: 'う',\n  e: 'え',\n  o: 'う',\n};\n\nconst FOUR_CHAR_EDGECASES = [\n  'lts',\n  'chy',\n  'shy',\n];\n\nconst FROM_ROMAJI = {\n  '.': '。',\n  ',': '、',\n  '/': '・',\n  '!': '！',\n  '?': '？',\n  '~': '〜',\n  '-': 'ー',\n  '[': '「',\n  ']': '」',\n  '(': '（',\n  ')': '）',\n  '{': '｛',\n  '}': '｝',\n\n  'a': 'あ',\n  'i': 'い',\n  'u': 'う',\n  'e': 'え',\n  'o': 'お',\n  'yi': 'い',\n  'wu': 'う',\n  'whu': 'う',\n  'xa': 'ぁ',\n  'xi': 'ぃ',\n  'xu': 'ぅ',\n  'xe': 'ぇ',\n  'xo': 'ぉ',\n  'xyi': 'ぃ',\n  'xye': 'ぇ',\n  'ye': 'いぇ',\n  'wha': 'うぁ',\n  'whi': 'うぃ',\n  'whe': 'うぇ',\n  'who': 'うぉ',\n  'wi': 'うぃ',\n  'we': 'うぇ',\n  'va': 'ゔぁ',\n  'vi': 'ゔぃ',\n  'vu': 'ゔ',\n  've': 'ゔぇ',\n  'vo': 'ゔぉ',\n  'vya': 'ゔゃ',\n  'vyi': 'ゔぃ',\n  'vyu': 'ゔゅ',\n  'vye': 'ゔぇ',\n  'vyo': 'ゔょ',\n  'ka': 'か',\n  'ki': 'き',\n  'ku': 'く',\n  'ke': 'け',\n  'ko': 'こ',\n  'lka': 'ヵ',\n  'lke': 'ヶ',\n  'xka': 'ヵ',\n  'xke': 'ヶ',\n  'kya': 'きゃ',\n  'kyi': 'きぃ',\n  'kyu': 'きゅ',\n  'kye': 'きぇ',\n  'kyo': 'きょ',\n  'ca': 'か',\n  'ci': 'き',\n  'cu': 'く',\n  'ce': 'け',\n  'co': 'こ',\n  'lca': 'ヵ',\n  'lce': 'ヶ',\n  'xca': 'ヵ',\n  'xce': 'ヶ',\n  'qya': 'くゃ',\n  'qyu': 'くゅ',\n  'qyo': 'くょ',\n  'qwa': 'くぁ',\n  'qwi': 'くぃ',\n  'qwu': 'くぅ',\n  'qwe': 'くぇ',\n  'qwo': 'くぉ',\n  'qa': 'くぁ',\n  'qi': 'くぃ',\n  'qe': 'くぇ',\n  'qo': 'くぉ',\n  'kwa': 'くぁ',\n  'qyi': 'くぃ',\n  'qye': 'くぇ',\n  'ga': 'が',\n  'gi': 'ぎ',\n  'gu': 'ぐ',\n  'ge': 'げ',\n  'go': 'ご',\n  'gya': 'ぎゃ',\n  'gyi': 'ぎぃ',\n  'gyu': 'ぎゅ',\n  'gye': 'ぎぇ',\n  'gyo': 'ぎょ',\n  'gwa': 'ぐぁ',\n  'gwi': 'ぐぃ',\n  'gwu': 'ぐぅ',\n  'gwe': 'ぐぇ',\n  'gwo': 'ぐぉ',\n  'sa': 'さ',\n  'si': 'し',\n  'shi': 'し',\n  'su': 'す',\n  'se': 'せ',\n  'so': 'そ',\n  'za': 'ざ',\n  'zi': 'じ',\n  'zu': 'ず',\n  'ze': 'ぜ',\n  'zo': 'ぞ',\n  'ji': 'じ',\n  'sya': 'しゃ',\n  'syi': 'しぃ',\n  'syu': 'しゅ',\n  'sye': 'しぇ',\n  'syo': 'しょ',\n  'sha': 'しゃ',\n  'shu': 'しゅ',\n  'she': 'しぇ',\n  'sho': 'しょ',\n  'shya': 'しゃ', // 4 character code\n  'shyu': 'しゅ', // 4 character code\n  'shye': 'しぇ', // 4 character code\n  'shyo': 'しょ', // 4 character code\n  'swa': 'すぁ',\n  'swi': 'すぃ',\n  'swu': 'すぅ',\n  'swe': 'すぇ',\n  'swo': 'すぉ',\n  'zya': 'じゃ',\n  'zyi': 'じぃ',\n  'zyu': 'じゅ',\n  'zye': 'じぇ',\n  'zyo': 'じょ',\n  'ja': 'じゃ',\n  'ju': 'じゅ',\n  'je': 'じぇ',\n  'jo': 'じょ',\n  'jya': 'じゃ',\n  'jyi': 'じぃ',\n  'jyu': 'じゅ',\n  'jye': 'じぇ',\n  'jyo': 'じょ',\n  'ta': 'た',\n  'ti': 'ち',\n  'tu': 'つ',\n  'te': 'て',\n  'to': 'と',\n  'chi': 'ち',\n  'tsu': 'つ',\n  'ltu': 'っ',\n  'xtu': 'っ',\n  'tya': 'ちゃ',\n  'tyi': 'ちぃ',\n  'tyu': 'ちゅ',\n  'tye': 'ちぇ',\n  'tyo': 'ちょ',\n  'cha': 'ちゃ',\n  'chu': 'ちゅ',\n  'che': 'ちぇ',\n  'cho': 'ちょ',\n  'cya': 'ちゃ',\n  'cyi': 'ちぃ',\n  'cyu': 'ちゅ',\n  'cye': 'ちぇ',\n  'cyo': 'ちょ',\n  'chya': 'ちゃ', // 4 character code\n  'chyu': 'ちゅ', // 4 character code\n  'chye': 'ちぇ', // 4 character code\n  'chyo': 'ちょ', // 4 character code\n  'tsa': 'つぁ',\n  'tsi': 'つぃ',\n  'tse': 'つぇ',\n  'tso': 'つぉ',\n  'tha': 'てゃ',\n  'thi': 'てぃ',\n  'thu': 'てゅ',\n  'the': 'てぇ',\n  'tho': 'てょ',\n  'twa': 'とぁ',\n  'twi': 'とぃ',\n  'twu': 'とぅ',\n  'twe': 'とぇ',\n  'two': 'とぉ',\n  'da': 'だ',\n  'di': 'ぢ',\n  'du': 'づ',\n  'de': 'で',\n  'do': 'ど',\n  'dya': 'ぢゃ',\n  'dyi': 'ぢぃ',\n  'dyu': 'ぢゅ',\n  'dye': 'ぢぇ',\n  'dyo': 'ぢょ',\n  'dha': 'でゃ',\n  'dhi': 'でぃ',\n  'dhu': 'でゅ',\n  'dhe': 'でぇ',\n  'dho': 'でょ',\n  'dwa': 'どぁ',\n  'dwi': 'どぃ',\n  'dwu': 'どぅ',\n  'dwe': 'どぇ',\n  'dwo': 'どぉ',\n  'na': 'な',\n  'ni': 'に',\n  'nu': 'ぬ',\n  'ne': 'ね',\n  'no': 'の',\n  'nya': 'にゃ',\n  'nyi': 'にぃ',\n  'nyu': 'にゅ',\n  'nye': 'にぇ',\n  'nyo': 'にょ',\n  'ha': 'は',\n  'hi': 'ひ',\n  'hu': 'ふ',\n  'he': 'へ',\n  'ho': 'ほ',\n  'fu': 'ふ',\n  'hya': 'ひゃ',\n  'hyi': 'ひぃ',\n  'hyu': 'ひゅ',\n  'hye': 'ひぇ',\n  'hyo': 'ひょ',\n  'fya': 'ふゃ',\n  'fyu': 'ふゅ',\n  'fyo': 'ふょ',\n  'fwa': 'ふぁ',\n  'fwi': 'ふぃ',\n  'fwu': 'ふぅ',\n  'fwe': 'ふぇ',\n  'fwo': 'ふぉ',\n  'fa': 'ふぁ',\n  'fi': 'ふぃ',\n  'fe': 'ふぇ',\n  'fo': 'ふぉ',\n  'fyi': 'ふぃ',\n  'fye': 'ふぇ',\n  'ba': 'ば',\n  'bi': 'び',\n  'bu': 'ぶ',\n  'be': 'べ',\n  'bo': 'ぼ',\n  'bya': 'びゃ',\n  'byi': 'びぃ',\n  'byu': 'びゅ',\n  'bye': 'びぇ',\n  'byo': 'びょ',\n  'pa': 'ぱ',\n  'pi': 'ぴ',\n  'pu': 'ぷ',\n  'pe': 'ぺ',\n  'po': 'ぽ',\n  'pya': 'ぴゃ',\n  'pyi': 'ぴぃ',\n  'pyu': 'ぴゅ',\n  'pye': 'ぴぇ',\n  'pyo': 'ぴょ',\n  'ma': 'ま',\n  'mi': 'み',\n  'mu': 'む',\n  'me': 'め',\n  'mo': 'も',\n  'mya': 'みゃ',\n  'myi': 'みぃ',\n  'myu': 'みゅ',\n  'mye': 'みぇ',\n  'myo': 'みょ',\n  'ya': 'や',\n  'yu': 'ゆ',\n  'yo': 'よ',\n  'xya': 'ゃ',\n  'xyu': 'ゅ',\n  'xyo': 'ょ',\n  'ra': 'ら',\n  'ri': 'り',\n  'ru': 'る',\n  're': 'れ',\n  'ro': 'ろ',\n  'rya': 'りゃ',\n  'ryi': 'りぃ',\n  'ryu': 'りゅ',\n  'rye': 'りぇ',\n  'ryo': 'りょ',\n  'la': 'ら',\n  'li': 'り',\n  'lu': 'る',\n  'le': 'れ',\n  'lo': 'ろ',\n  'lya': 'りゃ',\n  'lyi': 'りぃ',\n  'lyu': 'りゅ',\n  'lye': 'りぇ',\n  'lyo': 'りょ',\n  'wa': 'わ',\n  'wo': 'を',\n  'lwe': 'ゎ',\n  'xwa': 'ゎ',\n  'n': 'ん',\n  'nn': 'ん',\n  'n ': 'ん', // n + space\n  'xn': 'ん',\n  'ltsu': 'っ',  // 4 character code\n};\n\nconst TO_ROMAJI = {\n  '　': ' ',\n  '！': '!',\n  '？': '?',\n  '。': '.',\n  '・': '/',\n  '、': ',',\n  '〜': '~',\n  'ー': '-',\n  '「': '[',\n  '」': ']',\n  '（': '(',\n  '）': ')',\n  '｛': '{',\n  '｝': '}',\n\n  'あ': 'a',\n  'い': 'i',\n  'う': 'u',\n  'え': 'e',\n  'お': 'o',\n  'ゔぁ': 'va',\n  'ゔぃ': 'vi',\n  'ゔ': 'vu',\n  'ゔぇ': 've',\n  'ゔぉ': 'vo',\n  'か': 'ka',\n  'き': 'ki',\n  'きゃ': 'kya',\n  'きぃ': 'kyi',\n  'きゅ': 'kyu',\n  'く': 'ku',\n  'け': 'ke',\n  'こ': 'ko',\n  'が': 'ga',\n  'ぎ': 'gi',\n  'ぐ': 'gu',\n  'げ': 'ge',\n  'ご': 'go',\n  'ぎゃ': 'gya',\n  'ぎぃ': 'gyi',\n  'ぎゅ': 'gyu',\n  'ぎぇ': 'gye',\n  'ぎょ': 'gyo',\n  'さ': 'sa',\n  'す': 'su',\n  'せ': 'se',\n  'そ': 'so',\n  'ざ': 'za',\n  'ず': 'zu',\n  'ぜ': 'ze',\n  'ぞ': 'zo',\n  'し': 'shi',\n  'しゃ': 'sha',\n  'しゅ': 'shu',\n  'しょ': 'sho',\n  'じ': 'ji',\n  'じゃ': 'ja',\n  'じゅ': 'ju',\n  'じょ': 'jo',\n  'た': 'ta',\n  'ち': 'chi',\n  'ちゃ': 'cha',\n  'ちゅ': 'chu',\n  'ちょ': 'cho',\n  'つ': 'tsu',\n  'て': 'te',\n  'と': 'to',\n  'だ': 'da',\n  'ぢ': 'di',\n  'づ': 'du',\n  'で': 'de',\n  'ど': 'do',\n  'な': 'na',\n  'に': 'ni',\n  'にゃ': 'nya',\n  'にゅ': 'nyu',\n  'にょ': 'nyo',\n  'ぬ': 'nu',\n  'ね': 'ne',\n  'の': 'no',\n  'は': 'ha',\n  'ひ': 'hi',\n  'ふ': 'fu',\n  'へ': 'he',\n  'ほ': 'ho',\n  'ひゃ': 'hya',\n  'ひゅ': 'hyu',\n  'ひょ': 'hyo',\n  'ふぁ': 'fa',\n  'ふぃ': 'fi',\n  'ふぇ': 'fe',\n  'ふぉ': 'fo',\n  'ば': 'ba',\n  'び': 'bi',\n  'ぶ': 'bu',\n  'べ': 'be',\n  'ぼ': 'bo',\n  'びゃ': 'bya',\n  'びゅ': 'byu',\n  'びょ': 'byo',\n  'ぱ': 'pa',\n  'ぴ': 'pi',\n  'ぷ': 'pu',\n  'ぺ': 'pe',\n  'ぽ': 'po',\n  'ぴゃ': 'pya',\n  'ぴゅ': 'pyu',\n  'ぴょ': 'pyo',\n  'ま': 'ma',\n  'み': 'mi',\n  'む': 'mu',\n  'め': 'me',\n  'も': 'mo',\n  'みゃ': 'mya',\n  'みゅ': 'myu',\n  'みょ': 'myo',\n  'や': 'ya',\n  'ゆ': 'yu',\n  'よ': 'yo',\n  'ら': 'ra',\n  'り': 'ri',\n  'る': 'ru',\n  'れ': 're',\n  'ろ': 'ro',\n  'りゃ': 'rya',\n  'りゅ': 'ryu',\n  'りょ': 'ryo',\n  'わ': 'wa',\n  'を': 'wo',\n  'ん': 'n',\n\n  // Archaic characters\n  'ゐ': 'wi',\n  'ゑ': 'we',\n\n  // Uncommon character combos\n  'きぇ': 'kye',\n  'きょ': 'kyo',\n  'じぃ': 'jyi',\n  'じぇ': 'jye',\n  'ちぃ': 'cyi',\n  'ちぇ': 'che',\n  'ひぃ': 'hyi',\n  'ひぇ': 'hye',\n  'びぃ': 'byi',\n  'びぇ': 'bye',\n  'ぴぃ': 'pyi',\n  'ぴぇ': 'pye',\n  'みぇ': 'mye',\n  'みぃ': 'myi',\n  'りぃ': 'ryi',\n  'りぇ': 'rye',\n  'にぃ': 'nyi',\n  'にぇ': 'nye',\n  'しぃ': 'syi',\n  'しぇ': 'she',\n  'いぇ': 'ye',\n  'うぁ': 'wha',\n  'うぉ': 'who',\n  'うぃ': 'wi',\n  'うぇ': 'we',\n  'ゔゃ': 'vya',\n  'ゔゅ': 'vyu',\n  'ゔょ': 'vyo',\n  'すぁ': 'swa',\n  'すぃ': 'swi',\n  'すぅ': 'swu',\n  'すぇ': 'swe',\n  'すぉ': 'swo',\n  'くゃ': 'qya',\n  'くゅ': 'qyu',\n  'くょ': 'qyo',\n  'くぁ': 'qwa',\n  'くぃ': 'qwi',\n  'くぅ': 'qwu',\n  'くぇ': 'qwe',\n  'くぉ': 'qwo',\n  'ぐぁ': 'gwa',\n  'ぐぃ': 'gwi',\n  'ぐぅ': 'gwu',\n  'ぐぇ': 'gwe',\n  'ぐぉ': 'gwo',\n  'つぁ': 'tsa',\n  'つぃ': 'tsi',\n  'つぇ': 'tse',\n  'つぉ': 'tso',\n  'てゃ': 'tha',\n  'てぃ': 'thi',\n  'てゅ': 'thu',\n  'てぇ': 'the',\n  'てょ': 'tho',\n  'とぁ': 'twa',\n  'とぃ': 'twi',\n  'とぅ': 'twu',\n  'とぇ': 'twe',\n  'とぉ': 'two',\n  'ぢゃ': 'dya',\n  'ぢぃ': 'dyi',\n  'ぢゅ': 'dyu',\n  'ぢぇ': 'dye',\n  'ぢょ': 'dyo',\n  'でゃ': 'dha',\n  'でぃ': 'dhi',\n  'でゅ': 'dhu',\n  'でぇ': 'dhe',\n  'でょ': 'dho',\n  'どぁ': 'dwa',\n  'どぃ': 'dwi',\n  'どぅ': 'dwu',\n  'どぇ': 'dwe',\n  'どぉ': 'dwo',\n  'ふぅ': 'fwu',\n  'ふゃ': 'fya',\n  'ふゅ': 'fyu',\n  'ふょ': 'fyo',\n\n  //  Small Characters (normally not transliterated alone)\n  'ぁ': 'a',\n  'ぃ': 'i',\n  'ぇ': 'e',\n  'ぅ': 'u',\n  'ぉ': 'o',\n  'ゃ': 'ya',\n  'ゅ': 'yu',\n  'ょ': 'yo',\n  'っ': '',\n  'ゕ': 'ka',\n  'ゖ': 'ka',\n  'ゎ': 'wa',\n\n  // Ambiguous consonant vowel pairs\n  'んあ': 'n\\'a',\n  'んい': 'n\\'i',\n  'んう': 'n\\'u',\n  'んえ': 'n\\'e',\n  'んお': 'n\\'o',\n  'んや': 'n\\'ya',\n  'んゆ': 'n\\'yu',\n  'んよ': 'n\\'yo',\n};\n\nexport {\n  DEFAULT_OPTIONS,\n  KANJI_KANA_REGEX,\n  ROMAJI_REGEX,\n  ENGLISH_PUNCTUATION_RANGES,\n  JAPANESE_FULLWIDTH_PUNCTUATION_RANGES,\n  LOWERCASE_START,\n  LOWERCASE_END,\n  UPPERCASE_START,\n  UPPERCASE_END,\n  HIRAGANA_START,\n  HIRAGANA_END,\n  KATAKANA_START,\n  KATAKANA_END,\n  KANJI_START,\n  KANJI_END,\n  LOWERCASE_FULLWIDTH_START,\n  LOWERCASE_FULLWIDTH_END,\n  UPPERCASE_FULLWIDTH_START,\n  UPPERCASE_FULLWIDTH_END,\n  PROLONGED_SOUND_MARK,\n  KANA_SLASH_DOT,\n  // character tables\n  LONG_VOWELS,\n  FOUR_CHAR_EDGECASES,\n  FROM_ROMAJI,\n  TO_ROMAJI,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","/**\n * Checks if input string is empty\n * @param  {String} input text input\n * @return {Boolean} true if no input\n */\nfunction isEmpty(input) {\n  if (typeof input !== 'string') {\n    console.warn(`Input provided to isEmpty(): ${JSON.stringify(input)} was not a string.`); // eslint-disable-line no-console\n    return true;\n  }\n  return !input.length;\n}\n\nexport default isEmpty;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isEmpty.js","import isEmpty from './isEmpty';\n\n/**\n * Takes a character and a unicode range. Returns true if the char is in the range.\n * @param  {String}  char  unicode character\n * @param  {Number}  start unicode start range\n * @param  {Number}  end   unicode end range\n * @return {Boolean}\n */\nfunction isCharInRange(char = '', start, end) {\n  if (isEmpty(char)) return false;\n  const code = char.charCodeAt(0);\n  return start <= code && code <= end;\n}\n\nexport default isCharInRange;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharInRange.js","import isEmpty from '../utils/isEmpty';\nimport isCharRomaji from '../utils/isCharRomaji';\n\n/**\n * Test if `input` is [Romaji](https://en.wikipedia.org/wiki/Romaji) (including [Hepburn romanisation](https://en.wikipedia.org/wiki/Hepburn_romanization))\n * @param  {String} [input=''] text\n * @return {Boolean} true if [Romaji](https://en.wikipedia.org/wiki/Romaji)\n * @example\n * isRomaji('Tōkyō and Ōsaka')\n * // => true\n * isRomaji('a*b&c-d')\n * // => true\n * isRomaji('あアA')\n * // => false\n * isRomaji('お願い')\n * // => false\n * isRomaji('a！b&cーd') // Full-width punctuation fails\n * // => false\n */\nfunction isRomaji(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every((char) => isCharRomaji(char));\n}\n\nexport default isRomaji;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isRomaji.js","import isEmpty from '../utils/isEmpty';\nimport isCharKana from '../utils/isCharKana';\n\n/**\n * Test if `input` is [Kana](https://en.wikipedia.org/wiki/Kana) ([Katakana](https://en.wikipedia.org/wiki/Katakana) and/or [Hiragana](https://en.wikipedia.org/wiki/Hiragana))\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Kana](https://en.wikipedia.org/wiki/Kana)\n * @example\n * isKana('あ')\n * // => true\n * isKana('ア')\n * // => true\n * isKana('あーア')\n * // => true\n * isKana('A')\n * // => false\n * isKana('あAア')\n * // => false\n */\nfunction isKana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKana);\n}\n\nexport default isKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isKana.js","import isEmpty from '../utils/isEmpty';\nimport isCharKanji from '../utils/isCharKanji';\n\n/**\n * Tests if `input` is [Kanji](https://en.wikipedia.org/wiki/Kanji) ([Japanese CJK ideographs](https://en.wikipedia.org/wiki/CJK_Unified_Ideographs))\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Kanji](https://en.wikipedia.org/wiki/Kanji)\n * @example\n * isKanji('刀')\n * // => true\n * isKanji('切腹')\n * // => true\n * isKanji('勢い')\n * // => false\n * isKanji('あAア')\n * // => false\n * isKanji('🐸')\n * // => false\n */\nfunction isKanji(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKanji);\n}\n\nexport default isKanji;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isKanji.js","import isEmpty from '../utils/isEmpty';\nimport isCharKatakana from '../utils/isCharKatakana';\n\n/**\n * Test if `input` is [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @example\n * isKatakana('ゲーム')\n * // => true\n * isKatakana('あ')\n * // => false\n * isKatakana('A')\n * // => false\n * isKatakana('あア')\n * // => false\n */\nfunction isKatakana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKatakana);\n}\n\nexport default isKatakana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isKatakana.js","import isKanji from './isKanji';\nimport isHiragana from './isHiragana';\nimport isKatakana from './isKatakana';\nimport isRomaji from './isRomaji';\n\n/**\n * Test if `input` is a mix of [Romaji](https://en.wikipedia.org/wiki/Romaji) *and* [Kana](https://en.wikipedia.org/wiki/Kana), defaults to skip over [Kanji](https://en.wikipedia.org/wiki/Kanji)\n * @param  {String} input text\n * @param  {Object} [options={ passKanji: true }] optional config to skip over kanji\n * @return {Boolean} true if mixed\n * @example\n * isRomajiKana('Abあア'))\n * // => true\n * isRomajiKana('お腹A'))\n * // => true\n * isRomajiKana('お腹A', { passKanji: false }))\n * // => false\n * isRomajiKana('ab'))\n * // => false\n * isRomajiKana('あア'))\n * // => false\n */\nfunction isRomajiKana(input = '', options = { passKanji: true }) {\n  const chars = [...input];\n  let hasKanji = false;\n  if (!options.passKanji) {\n    hasKanji = chars.some(isKanji);\n  }\n  return (chars.some(isHiragana) || chars.some(isKatakana)) && chars.some(isRomaji) && !hasKanji;\n}\n\nexport default isRomajiKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isRomajiKana.js","import {\n  HIRAGANA_START,\n  HIRAGANA_END,\n} from '../constants';\nimport isEmpty from './isEmpty';\nimport isCharLongDash from './isCharLongDash';\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is [Hiragana](https://en.wikipedia.org/wiki/Hiragana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharHiragana(char = '') {\n  if (isEmpty(char)) return false;\n  if (isCharLongDash(char)) return true;\n  return isCharInRange(char, HIRAGANA_START, HIRAGANA_END);\n}\n\nexport default isCharHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharHiragana.js","import {\n  KATAKANA_START,\n  KATAKANA_END,\n} from '../constants';\n\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKatakana(char = '') {\n  return isCharInRange(char, KATAKANA_START, KATAKANA_END);\n}\n\nexport default isCharKatakana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharKatakana.js","import { PROLONGED_SOUND_MARK } from '../constants';\nimport isEmpty from './isEmpty';\n\n/**\n * Returns true if char is 'ー'\n * @param  {String} char to test\n * @return {Boolean}\n */\nfunction isCharLongDash(char = '') {\n  if (isEmpty(char)) return false;\n  return char.charCodeAt(0) === PROLONGED_SOUND_MARK;\n}\n\nexport default isCharLongDash;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharLongDash.js","import isCharHiragana from '../utils/isCharHiragana';\nimport isEmpty from '../utils/isEmpty';\n\n/**\n * Test if `input` is [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @example\n * isHiragana('げーむ')\n * // => true\n * isHiragana('A')\n * // => false\n * isHiragana('あア')\n * // => false\n */\nfunction isHiragana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharHiragana);\n}\n\nexport default isHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isHiragana.js","import { KANJI_KANA_REGEX } from '../constants';\nimport isEmpty from '../utils/isEmpty';\n\n/**\n * Test if `input` is [Kanji](https://en.wikipedia.org/wiki/Kanji) and/or [Kana](https://en.wikipedia.org/wiki/Kana) like “「泣き虫」”\n * Includes Japanese full-width punctuation ranges\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Kanji](https://en.wikipedia.org/wiki/Kanji) and/or [Kana](https://en.wikipedia.org/wiki/Kana)\n * @example\n * isKanjiKana('泣き虫')\n * // => true\n * isKanjiKana('あア')\n * // => true\n * isKanjiKana('泣き虫。！〜') // Full-width punctuation\n * // => true\n * isKanjiKana('泣き虫.!~') // Half-width / Latin punctuation\n * // => false\n * isKanjiKana('泣き虫A')\n * // => false\n * isKanjiKana('A')\n * // => false\n */\nfunction isKanjiKana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every((char) => KANJI_KANA_REGEX.test(char));\n}\n\nexport default isKanjiKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isKanjiKana.js","import {\n  DEFAULT_OPTIONS,\n  UPPERCASE_START,\n  UPPERCASE_END,\n  FOUR_CHAR_EDGECASES,\n  FROM_ROMAJI,\n} from '../constants';\n\nimport isCharInRange from '../utils/isCharInRange';\nimport isCharUpperCase from '../utils/isCharUpperCase';\nimport getChunkSize from '../utils/getChunkSize';\nimport getChunk from '../utils/getChunk';\nimport isCharConsonant from '../utils/isCharConsonant';\nimport isCharVowel from '../utils/isCharVowel';\nimport isKana from './isKana';\nimport hiraganaToKatakana from './hiraganaToKatakana';\n\n/**\n  * @typedef {Object} DefaultOptions\n  * @property {Boolean} [useObsoleteKana=false] - Set to true to use obsolete characters, such as ゐ and ゑ.\n  * @example\n  * toHiragana('we', { useObsoleteKana: true })\n  * // => 'ゑ'\n  * @property {Boolean} [passRomaji=false] - Set to true to pass romaji when using mixed syllabaries with toKatakana() or toHiragana()\n  * @example\n  * toHiragana('only convert the katakana: ヒラガナ', { passRomaji: true })\n  * // => \"only convert the katakana: ひらがな\"\n  * @property {Boolean} [upcaseKatakana=false] - Set to true to convert katakana to uppercase using toRomaji()\n  * @example\n  * toRomaji('ひらがな　カタカナ', { upcaseKatakana: true })\n  * // => \"hiragana KATAKANA\"\n  * @property {Boolean} [IMEMode=false] - Set to true to handle conversion from a text input as it is being typed\n*/\n\n/**\n * Convert [Romaji](https://en.wikipedia.org/wiki/Romaji) to [Kana](https://en.wikipedia.org/wiki/Kana), lowercase text will result in [Hiragana](https://en.wikipedia.org/wiki/Hiragana) and uppercase text will result in [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} [input=''] text\n * @param  {DefaultOptions} [options={ useObsoleteKana: false, IMEMode: false }]\n * @return {String} converted text\n * @example\n * toKana('onaji BUTTSUUJI'))\n * // => 'おなじ ブッツウジ'\n * toKana('ONAJI buttsuuji'))\n * // => 'オナジ ぶっつうじ'\n * toKana('座禅[zazen]スタイル'))\n * // => '座禅「ざぜん」スタイル'\n * toKana('batsuge-mu'))\n * // => 'ばつげーむ'\n * toKana('.,[]{}()!?/')) // Punctuation conversion\n * // => '。、「」｛｝（）！？・'\n * toKana('we', { useObsoleteKana: true })\n * // => 'ゑ'\n */\nfunction toKana(input = '', options = {}, ignoreCase = false) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options);\n  // Final output array\n  const kana = [];\n  // Position in the string that is being evaluated\n  let cursor = 0;\n  const len = input.length;\n  const maxChunk = 3;\n  let chunkSize = 3;\n  let chunk = '';\n  let chunkLC = '';\n\n  // Steps through the string pulling out chunks of characters. Each chunk will be evaluated\n  // against the romaji to kana table. If there is no match, the last character in the chunk\n  // is dropped and the chunk is reevaluated. If nothing matches, the character is assumed\n  // to be invalid or punctuation or other and gets passed through.\n  while (cursor < len) {\n    let kanaChar = null;\n    chunkSize = getChunkSize(maxChunk, len - cursor);\n    while (chunkSize > 0) {\n      chunk = getChunk(input, cursor, cursor + chunkSize);\n      chunkLC = chunk.toLowerCase();\n      // Handle super-rare edge cases with 4 char chunks (like ltsu, chya, shya)\n      if (FOUR_CHAR_EDGECASES.includes(chunkLC) && (len - cursor) >= 4) {\n        chunkSize += 1;\n        chunk = getChunk(input, cursor, cursor + chunkSize);\n        chunkLC = chunk.toLowerCase();\n      } else {\n        // Handle edge case of n followed by consonant\n        if (chunkLC.charAt(0) === 'n') {\n          if (chunkSize === 2) {\n            // Handle edge case of n followed by a space (only if not in IME mode)\n            if (!config.IMEMode && chunkLC.charAt(1) === ' ') {\n              kanaChar = 'ん ';\n              break;\n            }\n            // Convert IME input of n' to \"ん\"\n            if (config.IMEMode && chunkLC === \"n'\") {\n              kanaChar = 'ん';\n              break;\n            }\n          }\n          // Handle edge case of n followed by n and vowel\n          if (isCharConsonant(chunkLC.charAt(1), false) && isCharVowel(chunkLC.charAt(2))) {\n            chunkSize = 1;\n            chunk = getChunk(input, cursor, cursor + chunkSize);\n            chunkLC = chunk.toLowerCase();\n          }\n        }\n\n        // Handle case of double consonants\n        if (chunkLC.charAt(0) !== 'n' &&\n          isCharConsonant(chunkLC.charAt(0)) &&\n          chunk.charAt(0) === chunk.charAt(1)\n        ) {\n          chunkSize = 1;\n          // Return katakana ッ if chunk is uppercase, otherwise return hiragana っ\n          if (isCharInRange(chunk.charAt(0), UPPERCASE_START, UPPERCASE_END)) {\n            chunkLC = chunk = 'ッ';\n          } else {\n            chunkLC = chunk = 'っ';\n          }\n        }\n      }\n\n      kanaChar = FROM_ROMAJI[chunkLC];\n      // console.log(`${cursor}x${chunkSize}:${chunk} => ${kanaChar}`); // DEBUG\n      if (kanaChar != null) {\n        break;\n      }\n      // Step down the chunk size.\n      // If chunkSize was 4, step down twice.\n      if (chunkSize === 4) {\n        chunkSize -= 2;\n      } else {\n        chunkSize -= 1;\n      }\n    }\n\n    // Passthrough undefined values\n    if (kanaChar == null) {\n      kanaChar = chunk;\n    }\n\n    // Handle special cases.\n    if (config.useObsoleteKana) {\n      if (chunkLC === 'wi') kanaChar = 'ゐ';\n      if (chunkLC === 'we') kanaChar = 'ゑ';\n    }\n\n    if (!!config.IMEMode && chunkLC.charAt(0) === 'n') {\n      if ((input.charAt(cursor + 1).toLowerCase() === 'y' &&\n        isCharVowel(input.charAt(cursor + 2)) === false) ||\n        cursor === (len - 1) ||\n        isKana(input.charAt(cursor + 1))\n      ) {\n        // Don't transliterate this yet.\n        kanaChar = chunk.charAt(0);\n      }\n    }\n\n    // Use katakana if first letter in chunk is uppercase\n    if (!ignoreCase) {\n      if (isCharUpperCase(chunk.charAt(0))) {\n        kanaChar = hiraganaToKatakana(kanaChar);\n      }\n    }\n\n    kana.push(kanaChar);\n    cursor += chunkSize || 1;\n  }\n\n  return kana.join('');\n}\n\nexport default toKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/toKana.js","import {\n  KATAKANA_START,\n  HIRAGANA_START,\n} from '../constants';\n\nimport isCharLongDash from '../utils/isCharLongDash';\nimport isCharSlashDot from '../utils/isCharSlashDot';\nimport isCharHiragana from '../utils/isCharHiragana';\n\n/**\n * Convert [Hiragana](https://en.wikipedia.org/wiki/Hiragana) to [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * Passes through any non-hiragana chars\n * @param  {String} [input=''] text input\n * @return {String} converted text\n * @example\n * hiraganaToKatakana('ひらがな')\n * // => \"ヒラガナ\"\n * hiraganaToKatakana('ひらがな is a type of kana')\n * // => \"ヒラガナ is a type of kana\"\n * @ignore\n */\nfunction hiraganaToKatakana(input = '') {\n  const kata = [];\n  input.split('').forEach((char) => {\n    // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n    if (isCharLongDash(char) || isCharSlashDot(char)) {\n      kata.push(char);\n    } else if (isCharHiragana(char)) {\n      // Shift charcode.\n      const code = char.charCodeAt(0) + (KATAKANA_START - HIRAGANA_START);\n      const kataChar = String.fromCharCode(code);\n      kata.push(kataChar);\n    } else {\n      // Pass non-hiragana chars through\n      kata.push(char);\n    }\n  });\n  return kata.join('');\n}\n\nexport default hiraganaToKatakana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/hiraganaToKatakana.js","import {\n  LONG_VOWELS,\n  KATAKANA_START,\n  HIRAGANA_START,\n  TO_ROMAJI,\n} from '../constants';\n\nimport isCharLongDash from '../utils/isCharLongDash';\nimport isCharSlashDot from '../utils/isCharSlashDot';\nimport isCharKatakana from '../utils/isCharKatakana';\n\n/**\n * Convert [Katakana](https://en.wikipedia.org/wiki/Katakana) to [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * Passes through any non-katakana chars\n * @param  {String} [input=''] text input\n * @return {String} converted text\n * @example\n * katakanaToHiragana('カタカナ')\n * // => \"かたかな\"\n * katakanaToHiragana('カタカナ is a type of kana')\n * // => \"かたかな is a type of kana\"\n * @ignore\n */\nfunction katakanaToHiragana(input = '') {\n  const hira = [];\n  let previousKana = '';\n  const iterable = input.split('');\n  for (let index = 0; index < iterable.length; index += 1) {\n    const char = iterable[index];\n    const [slashDot, longDash] = [isCharSlashDot(char), isCharLongDash(char)];\n    // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n    if (slashDot || (longDash && index < 1)) {\n      hira.push(char);\n    // Transform long vowels: 'オー' to 'おう'\n    } else if (longDash && index > 0) {\n      // Transform previousKana back to romaji, and slice off the vowel\n      const romaji = TO_ROMAJI[previousKana].slice(-1);\n      hira.push(LONG_VOWELS[romaji]);\n    } else if (isCharKatakana(char)) {\n      // Shift charcode.\n      const code = char.charCodeAt(0) + (HIRAGANA_START - KATAKANA_START);\n      const hiraChar = String.fromCharCode(code);\n      hira.push(hiraChar);\n      previousKana = hiraChar;\n    } else {\n      // Pass non katakana chars through\n      hira.push(char);\n      previousKana = '';\n    }\n  }\n  return hira.join('');\n}\n\nexport default katakanaToHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/katakanaToHiragana.js","import toKana from './toKana';\n\n/**\n * Convert [Romaji](https://en.wikipedia.org/wiki/Romaji) to [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @param  {String} [input=''] text\n * @param  {Object} options used internally to pass along default options\n * @return {String} converted text\n * @example\n * romajiToHiragana('hiragana')\n * // => \"ひらがな\"\n * @ignore\n */\nfunction romajiToHiragana(input = '', options = {}) {\n  return toKana(input, options, true /* ignore case to enforce Hiragana conversion */);\n}\n\nexport default romajiToHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/romajiToHiragana.js","/**\n * Returns a substring based on start/end values\n * @param  {String} text\n * @param  {Number} start index\n * @param  {Number} end index\n * @return {String} new substring\n */\nfunction getChunk(text = '', start = 0, end) {\n  return text.slice(start, end);\n}\n\nexport default getChunk;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/getChunk.js","/**\n * Limits picking chunk size to be no bigger than the remaining characters.\n * @param  {Number} max index limit\n * @param  {Number} remaining\n * @return {Number}\n */\nfunction getChunkSize(max = 0, remaining = 0) {\n  return Math.min(max, remaining);\n}\n\nexport default getChunkSize;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/getChunkSize.js","import isEmpty from './isEmpty';\nimport isCharHiragana from './isCharHiragana';\nimport isCharKatakana from './isCharKatakana';\n\n/**\n * Tests a character. Returns true if the character is [Hiragana](https://en.wikipedia.org/wiki/Hiragana) or [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKana(char = '') {\n  if (isEmpty(char)) return false;\n  return isCharHiragana(char) || isCharKatakana(char);\n}\n\nexport default isCharKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharKana.js","import { KANA_SLASH_DOT } from '../constants';\nimport isEmpty from './isEmpty';\n\n/**\n * Tests if char is '・'\n * @param  {String} char\n * @return {Boolean} true if '・'\n */\nfunction isCharSlashDot(char = '') {\n  if (isEmpty(char)) return false;\n  return char.charCodeAt(0) === KANA_SLASH_DOT;\n}\n\nexport default isCharSlashDot;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharSlashDot.js","import isEmpty from '../utils/isEmpty';\nimport isCharKana from '../utils/isCharKana';\nimport isCharPunctuation from '../utils/isCharPunctuation';\nimport isKanjiKana from './isKanjiKana';\nimport isKana from './isKana';\nimport isKanji from './isKanji';\n\n/**\n * Strips trailing [Okurigana](https://en.wikipedia.org/wiki/Okurigana) if `input` is a mix of [Kanji](https://en.wikipedia.org/wiki/Kanji) and [Kana](https://en.wikipedia.org/wiki/Kana)\n * @param  {String} input text\n * @param  {Object} [options={ all: false }] config object specifying if *all* kana should be removed, not just trailing okurigana\n * @return {String} text with okurigana removed\n * @example\n * stripOkurigana('踏み込む')\n * // => '踏み込'\n * stripOkurigana('粘り。')\n * // => '粘。'\n * stripOkurigana('お祝い')\n * // => 'お祝'\n * stripOkurigana('踏み込む', { all: true })\n * // => '踏込'\n * stripOkurigana('お祝い', { all: true })\n * // => '祝'\n */\nfunction stripOkurigana(input = '', options = { all: false }) {\n  if (isEmpty(input) || !isKanjiKana(input) || isKana(input)) return input;\n  const chars = [...input];\n\n  // strip every kana\n  if (options.all) return chars.filter((char) => !isCharKana(char)).join('');\n\n  // strip trailing only\n  const reverseChars = chars.reverse();\n  for (let i = 0, len = reverseChars.length; i < len; i += 1) {\n    const char = reverseChars[i];\n    // pass if it's punctuation\n    if (isCharPunctuation(char)) continue; // eslint-disable-line no-continue\n    // blank out if not kanji\n    if (!isKanji(char)) {\n      reverseChars[i] = '';\n    } else break; // stop when we hit a kanji char\n  }\n\n  return reverseChars.reverse().join('');\n}\n\nexport default stripOkurigana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/stripOkurigana.js","import { DEFAULT_OPTIONS } from '../constants';\nimport katakanaToHiragana from './katakanaToHiragana';\nimport isRomaji from './isRomaji';\nimport isRomajiKana from './isRomajiKana';\nimport romajiToHiragana from './romajiToHiragana';\n\n/**\n * Convert input to [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @param  {String} [input=''] text\n * @param  {Object} [options={ useObsoleteKana: false, passRomaji: false }]\n * @return {String} converted text\n * @example\n * toHiragana('toukyou, オオサカ')\n * // => 'とうきょう、　おおさか'\n * toHiragana('only カナ', { passRomaji: true })\n * // => 'only かな'\n * toHiragana('wi')\n * // => 'うぃ'\n * toHiragana('wi', { useObsoleteKana: true })\n * // => 'ゐ'\n*/\nfunction toHiragana(input = '', options = {}) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options);\n  if (config.passRomaji) return katakanaToHiragana(input);\n  if (isRomaji(input)) return romajiToHiragana(input, config);\n  if (isRomajiKana(input, { passKanji: true })) {\n    const romaji = katakanaToHiragana(input);\n    return romajiToHiragana(romaji, config);\n  }\n  return katakanaToHiragana(input);\n}\n\nexport default toHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/toHiragana.js","import { DEFAULT_OPTIONS } from '../constants';\nimport hiraganaToKatakana from './hiraganaToKatakana';\nimport isRomaji from './isRomaji';\nimport isRomajiKana from './isRomajiKana';\nimport romajiToHiragana from './romajiToHiragana';\n\n/**\n * Convert input to [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @param  {String} [input=''] text\n * @param  {Object} [options={ useObsoleteKana: false, passRomaji: false }]\n * @return {String} converted text\n * @example\n * toKatakana('toukyou, おおさか')\n * // => 'トウキョウ、　オオサカ'\n * toKatakana('only かな', { passRomaji: true })\n * // => 'only カナ'\n * toKatakana('wi')\n * // => 'うぃ'\n * toKatakana('wi', { useObsoleteKana: true })\n * // => 'ヰ'\n*/\nfunction toKatakana(input = '', options = {}) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options);\n  if (config.passRomaji) return hiraganaToKatakana(input);\n  if (isRomaji(input) || isRomajiKana(input)) {\n    const romaji = romajiToHiragana(input, config);\n    return hiraganaToKatakana(romaji);\n  }\n  return hiraganaToKatakana(input);\n}\n\nexport default toKatakana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/toKatakana.js","import {\n  DEFAULT_OPTIONS,\n  TO_ROMAJI,\n} from '../constants';\n\nimport getChunkSize from '../utils/getChunkSize';\nimport getChunk from '../utils/getChunk';\nimport isKatakana from './isKatakana';\nimport katakanaToHiragana from './katakanaToHiragana';\n\n/**\n * Convert kana to romaji\n * @param  {String} kana text input\n * @param  {DefaultOptions} [options={ upcaseKatakana: false, IMEMode: false }]\n * @return {String} converted text\n * @example\n * toRomaji('ひらがな　カタカナ')\n * // => \"hiragana katakana\"\n * toRomaji('ひらがな　カタカナ', { upcaseKatakana: true })\n * // => \"hiragana KATAKANA\"\n */\nfunction toRomaji(kana = '', options = {}) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options);\n  const len = kana.length;\n  // Final output array\n  const roma = [];\n  // Position in the string that is being evaluated\n  let cursor = 0;\n  const maxChunk = 2;\n  let chunkSize = 2;\n  let chunk = '';\n  let romaChar = '';\n  let nextCharIsDoubleConsonant;\n\n  while (cursor < len) {\n    chunkSize = getChunkSize(maxChunk, len - cursor);\n    let convertThisChunkToUppercase = false;\n    while (chunkSize > 0) {\n      chunk = getChunk(kana, cursor, cursor + chunkSize);\n      if (isKatakana(chunk)) {\n        convertThisChunkToUppercase = config.upcaseKatakana;\n        chunk = katakanaToHiragana(chunk);\n      }\n      // special case for small tsus\n      if (chunk.charAt(0) === 'っ' && chunkSize === 1 && cursor < (len - 1)) {\n        nextCharIsDoubleConsonant = true;\n        romaChar = '';\n        break;\n      }\n\n      romaChar = TO_ROMAJI[chunk];\n\n      if ((romaChar != null) && nextCharIsDoubleConsonant) {\n        romaChar = romaChar.charAt(0).concat(romaChar);\n        nextCharIsDoubleConsonant = false;\n      }\n      // console.log(`${cursor}x${chunkSize}:${chunk} => ${romaChar}`);\n      if (romaChar != null) {\n        break;\n      }\n      chunkSize -= 1;\n    }\n    if (romaChar == null) {\n      // Passthrough undefined values\n      romaChar = chunk;\n    }\n\n    if (convertThisChunkToUppercase) {\n      romaChar = romaChar.toUpperCase();\n    }\n    roma.push(romaChar);\n    cursor += chunkSize || 1;\n  }\n  return roma.join('');\n}\n\nexport default toRomaji;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/toRomaji.js","import {\n  LOWERCASE_START,\n  UPPERCASE_START,\n  LOWERCASE_FULLWIDTH_START,\n  LOWERCASE_FULLWIDTH_END,\n  UPPERCASE_FULLWIDTH_START,\n  UPPERCASE_FULLWIDTH_END,\n} from '../constants';\n\nimport isCharInRange from './isCharInRange';\n\n/**\n * Converts all fullwidth roman letters in string to proper ASCII\n * @param  {String} text Full Width roman letters\n * @return {String} ASCII\n */\nfunction convertFullwidthCharsToASCII(text = '') {\n  const asciiChars = [...text].map((char) => {\n    const code = char.charCodeAt(0);\n    const lower = isCharInRange(char, LOWERCASE_FULLWIDTH_START, LOWERCASE_FULLWIDTH_END);\n    const upper = isCharInRange(char, UPPERCASE_FULLWIDTH_START, UPPERCASE_FULLWIDTH_END);\n    if (lower) {\n      return String.fromCharCode((code - LOWERCASE_FULLWIDTH_START) + LOWERCASE_START);\n    } else if (upper) {\n      return String.fromCharCode((code - UPPERCASE_FULLWIDTH_START) + UPPERCASE_START);\n    }\n    return char;\n  });\n\n  return asciiChars.join('');\n}\n\nexport default convertFullwidthCharsToASCII;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/convertFullwidthCharsToASCII.js","import { DEFAULT_OPTIONS } from './constants';\nimport convertFullwidthCharsToASCII from './utils/convertFullwidthCharsToASCII';\nimport isHiragana from './core/isHiragana';\nimport isKatakana from './core/isKatakana';\nimport isKana from './core/isKana';\nimport isKanjiKana from './core/isKanjiKana';\nimport isRomaji from './core/isRomaji';\nimport isRomajiKana from './core/isRomajiKana';\nimport isKanji from './core/isKanji';\nimport toHiragana from './core/toHiragana';\nimport toKatakana from './core/toKatakana';\nimport toKana from './core/toKana';\nimport toRomaji from './core/toRomaji';\nimport stripOkurigana from './core/stripOkurigana';\n\n/**\n * Binds eventListener for 'input' events to an input field to automagically replace values with kana\n * @param  {HTMLElement} input textarea, input[type=\"text\"] etc\n * @param  {Object} [options={}] user config overrides\n */\nfunction bind(input, options = {}) {\n  input.addEventListener('input', (event) => onInput(event, options));\n}\n\n/**\n * Unbinds eventListener from input field\n * @param  {HTMLElement} input textarea, input[type=\"text\"] etc\n */\nfunction unbind(input) {\n  input.removeEventListener('input', onInput);\n}\n\n/**\n * Automagically replaces input values with converted text to kana\n * @param  {Object} event DOM event to listen to\n * @param  {Object} [options={}] user config overrides\n */\nfunction onInput(event, options = {}) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options, { IMEMode: true });\n  const input = event.target;\n  // const startingCursor = input.selectionStart;\n  // const startingLength = input.value.length;\n  const normalizedInputString = convertFullwidthCharsToASCII(input.value);\n  const newText = toKana(normalizedInputString, config);\n  if (normalizedInputString !== newText) {\n    input.value = newText;\n    if (typeof input.selectionStart === 'number') {\n      input.selectionStart = input.value.length;\n      input.selectionEnd = input.value.length;\n      return;\n    }\n    if (typeof input.createTextRange !== 'undefined') {\n      input.focus();\n      const range = input.createTextRange();\n      range.collapse(false);\n      range.select();\n    }\n  }\n}\n\nexport {\n  bind,\n  unbind,\n  isHiragana,\n  isKatakana,\n  isKana,\n  isKanjiKana,\n  isRomaji,\n  isRomajiKana,\n  isKanji,\n  toHiragana,\n  toKatakana,\n  toKana,\n  toRomaji,\n  stripOkurigana,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import isEmpty from './isEmpty';\n\n/**\n * Tests a character and an english consonant. Returns true if the char is a consonant.\n * @param  {String} char\n * @param  {Boolean} [includeY=true] Optional parameter to include y as a consonant in test\n * @return {Boolean}\n */\nfunction isCharConsonant(char = '', includeY = true) {\n  if (isEmpty(char)) return false;\n  const regexp = includeY ? /[bcdfghjklmnpqrstvwxyz]/ : /[bcdfghjklmnpqrstvwxz]/;\n  return char.toLowerCase().charAt(0).search(regexp) !== -1;\n}\n\nexport default isCharConsonant;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharConsonant.js","import { ENGLISH_PUNCTUATION_RANGES } from '../constants';\nimport isCharInRange from './isCharInRange';\nimport isEmpty from './isEmpty';\n\n/**\n * Tests a character. Returns true if the character is considered English punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharEnglishPunctuation(char = '') {\n  if (isEmpty(char)) return false;\n  return ENGLISH_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nexport default isCharEnglishPunctuation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharEnglishPunctuation.js","import { JAPANESE_FULLWIDTH_PUNCTUATION_RANGES } from '../constants';\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is considered Japanese punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharJapanesePunctuation(char = '') {\n  return JAPANESE_FULLWIDTH_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nexport default isCharJapanesePunctuation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharJapanesePunctuation.js","import {\n  KANJI_START,\n  KANJI_END,\n} from '../constants';\n\nimport isCharInRange from './isCharInRange';\n/**\n * Tests a character. Returns true if the character is a CJK ideograph (kanji).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKanji(char = '') {\n  return isCharInRange(char, KANJI_START, KANJI_END);\n}\n\nexport default isCharKanji;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharKanji.js","import isEmpty from './isEmpty';\nimport isCharEnglishPunctuation from './isCharEnglishPunctuation';\nimport isCharJapanesePunctuation from './isCharJapanesePunctuation';\n\n/**\n * Tests a character. Returns true if the character is considered Japanese or English punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharPunctuation(char = '') {\n  if (isEmpty(char)) return false;\n  return isCharEnglishPunctuation(char) || isCharJapanesePunctuation(char);\n}\n\nexport default isCharPunctuation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharPunctuation.js","import isEmpty from './isEmpty';\nimport { ROMAJI_REGEX } from '../constants';\n\n/**\n * Tests a character. Returns true if the character is [Romaji](https://en.wikipedia.org/wiki/Romaji)\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKana(char = '') {\n  if (isEmpty(char)) return false;\n  return ROMAJI_REGEX.test(char);\n}\n\nexport default isCharKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharRomaji.js","import {\n  UPPERCASE_START,\n  UPPERCASE_END,\n} from '../constants';\nimport isEmpty from './isEmpty';\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests if char is in English unicode uppercase range\n * @param  {String} char\n * @return {Boolean}\n */\nfunction isCharUpperCase(char = '') {\n  if (isEmpty(char)) return false;\n  return isCharInRange(char, UPPERCASE_START, UPPERCASE_END);\n}\n\nexport default isCharUpperCase;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharUpperCase.js","import isEmpty from './isEmpty';\n\n/**\n * Tests a character and an english vowel. Returns true if the char is a vowel.\n * @param  {String} char\n * @param  {Boolean} [includeY=true] Optional parameter to include y as a vowel in test\n * @return {Boolean}\n */\nfunction isCharVowel(char = '', includeY = true) {\n  if (isEmpty(char)) return false;\n  const regexp = includeY ? /[aeiouy]/ : /[aeiou]/;\n  return char.toLowerCase().charAt(0).search(regexp) !== -1;\n}\n\nexport default isCharVowel;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharVowel.js"],"sourceRoot":""}