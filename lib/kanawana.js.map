{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d6f111c4b97917914855","webpack:///./src/index.js","webpack:///./src/constants.js","webpack:///./src/utils/convertFullwidthCharsToASCII.js","webpack:///./src/utils/isCharInRange.js","webpack:///./src/core/katakanaToHiragana.js","webpack:///./src/utils/isCharLongDash.js","webpack:///./src/utils/isCharSlashDot.js","webpack:///./src/utils/isCharKatakana.js","webpack:///./src/core/hiraganaToKatakana.js","webpack:///./src/utils/isCharHiragana.js","webpack:///./src/core/romajiToHiragana.js","webpack:///./src/core/romajiToKana.js","webpack:///./src/utils/isCharUpperCase.js","webpack:///./src/utils/getChunkSize.js","webpack:///./src/utils/getChunk.js","webpack:///./src/utils/isCharConsonant.js","webpack:///./src/utils/isCharVowel.js","webpack:///./src/core/isKana.js","webpack:///./src/utils/isCharKana.js","webpack:///./src/core/isHiragana.js","webpack:///./src/core/isKatakana.js","webpack:///./src/core/isKanjiKana.js","webpack:///./src/core/isRomaji.js","webpack:///./src/core/isKanji.js","webpack:///./src/utils/isCharKanji.js","webpack:///./src/core/isRomajiKana.js","webpack:///./src/core/toHiragana.js","webpack:///./src/core/toKatakana.js","webpack:///./src/core/toKana.js","webpack:///./src/core/toRomaji.js","webpack:///./src/core/hiraganaToRomaji.js","webpack:///./src/core/stripOkurigana.js","webpack:///./src/utils/isCharPunctuation.js","webpack:///./src/utils/isCharEnglishPunctuation.js","webpack:///./src/utils/isCharJapanesePunctuation.js"],"names":["bind","input","options","addEventListener","event","onInput","unbind","removeEventListener","config","Object","assign","IMEMode","target","normalizedInputString","value","newText","selectionStart","selectionEnd","length","createTextRange","focus","range","collapse","select","katakanaToHiragana","hiraganaToKatakana","romajiToHiragana","romajiToKana","isHiragana","isKatakana","isKana","isKanjiKana","isRomaji","isRomajiKana","isKanji","toHiragana","toKatakana","toKana","toRomaji","stripOkurigana","DEFAULT_OPTIONS","useObsoleteKana","passRomaji","ENGLISH_PUNCTUATION_RANGES","JAPANESE_FULLWIDTH_PUNCTUATION_RANGES","LOWERCASE_START","LOWERCASE_END","UPPERCASE_START","UPPERCASE_END","HIRAGANA_START","HIRAGANA_END","KATAKANA_START","KATAKANA_END","KANJI_START","KANJI_END","LOWERCASE_FULLWIDTH_START","LOWERCASE_FULLWIDTH_END","UPPERCASE_FULLWIDTH_START","UPPERCASE_FULLWIDTH_END","PROLONGED_SOUND_MARK","KANA_SLASH_DOT","KANJI_KANA_REGEX","LONG_VOWELS","a","i","u","e","o","FOUR_CHAR_EDGECASES","FROM_ROMAJI","TO_ROMAJI","convertFullwidthCharsToASCII","text","asciiChars","map","char","code","charCodeAt","lower","upper","String","fromCharCode","join","isCharInRange","start","end","kata","hira","previousKana","iterable","split","index","kataChar","slashDot","longDash","push","romaji","slice","hiraChar","isCharLongDash","isCharSlashDot","isCharKatakana","forEach","isCharHiragana","roma","ignoreCase","kana","cursor","len","maxChunk","chunkSize","chunk","chunkLC","kanaChar","toLowerCase","includes","charAt","isCharUpperCase","getChunkSize","max","remaining","Math","min","getChunk","isCharConsonant","includeY","regexp","search","isCharVowel","every","isCharKana","test","isCharKanji","passKanji","chars","hasKanji","some","hiraganaToRomaji","romaChar","nextCharIsDoubleConsonant","convertThisChunkToUppercase","convertKatakanaToUppercase","concat","toUpperCase","all","filter","reverseChars","reverse","isCharPunctuation","isCharEnglishPunctuation","isCharJapanesePunctuation"],"mappings":"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","file":"kanawana.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"kanawana\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kanawana\"] = factory();\n\telse\n\t\troot[\"kanawana\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d6f111c4b97917914855","import { DEFAULT_OPTIONS } from './constants';\nimport convertFullwidthCharsToASCII from './utils/convertFullwidthCharsToASCII';\nimport katakanaToHiragana from './core/katakanaToHiragana';\nimport hiraganaToKatakana from './core/hiraganaToKatakana';\nimport romajiToHiragana from './core/romajiToHiragana';\nimport romajiToKana from './core/romajiToKana';\nimport isHiragana from './core/isHiragana';\nimport isKatakana from './core/isKatakana';\nimport isKana from './core/isKana';\nimport isKanjiKana from './core/isKanjiKana';\nimport isRomaji from './core/isRomaji';\nimport isRomajiKana from './core/isRomajiKana';\nimport isKanji from './core/isKanji';\nimport toHiragana from './core/toHiragana';\nimport toKatakana from './core/toKatakana';\nimport toKana from './core/toKana';\nimport toRomaji from './core/toRomaji';\nimport stripOkurigana from './core/stripOkurigana';\n\n// TODO: add @examples to docstrings for doc generation\n\n/**\n * Binds eventListener for 'input' events to an input field to automagically replace values with kana\n * @param  {HTMLElement} input textarea, input[type=\"text\"] etc\n * @param  {Object} [options={}] user config overrides\n */\nfunction bind(input, options = {}) {\n  input.addEventListener('input', (event) => onInput(event, options));\n}\n\n/**\n * Unbinds eventListener from input field\n * @param  {HTMLElement} input textarea, input[type=\"text\"] etc\n */\nfunction unbind(input) {\n  input.removeEventListener('input', onInput);\n}\n\n/**\n * Automagically replaces input values with converted text to kana\n * @param  {Object} event DOM event to listen to\n * @param  {Object} [options={}] user config overrides\n */\nfunction onInput(event, options = {}) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options, { IMEMode: true });\n  const input = event.target;\n  // const startingCursor = input.selectionStart;\n  // const startingLength = input.value.length;\n  const normalizedInputString = convertFullwidthCharsToASCII(input.value);\n  const newText = toKana(normalizedInputString, config);\n  if (normalizedInputString !== newText) {\n    input.value = newText;\n    if (typeof input.selectionStart === 'number') {\n      input.selectionStart = input.selectionEnd = input.value.length;\n      return;\n    }\n    if (typeof input.createTextRange !== 'undefined') {\n      input.focus();\n      const range = input.createTextRange();\n      range.collapse(false);\n      range.select();\n    }\n  }\n}\n\nexport {\n  bind,\n  unbind,\n  katakanaToHiragana,\n  hiraganaToKatakana,\n  romajiToHiragana,\n  romajiToKana,\n  isHiragana,\n  isKatakana,\n  isKana,\n  isKanjiKana,\n  isRomaji,\n  isRomajiKana,\n  isKanji,\n  toHiragana,\n  toKatakana,\n  toKana,\n  toRomaji,\n  stripOkurigana,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n  * @typedef DefaultOptions\n  * @type {Object}\n  * @property {Boolean} [useObsoleteKana=false] - Set to true to use obsolete characters, such as ゐ and ゑ.\n  * @property {Boolean} [passRomaji=false] - Set to true to pass romaji when using mixed syllabaries with toKatakana() or toHiragana()\n  * @property {Boolean} [IMEMode=false] - Set to true to handle input from a text input as it is typed\n*/\n\n/**\n * Default config for KanaWana, user passed options will be merged with this\n * @type {DefaultOptions}\n * @example <caption>{ passRomaji: true }</caption>\n * toHiragana('romaji is not ヒラガナ', {passRomaji: true})\n * // => \"romaji is not ひらがな\"\n */\nconst DEFAULT_OPTIONS = {\n  useObsoleteKana: false,\n  passRomaji: false,\n  IMEMode: false,\n};\n\n// CharCode References\n// http://unicode-table.com\n// http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n\nconst ENGLISH_PUNCTUATION_RANGES = [\n  [0x21, 0x2F],\n  [0x3A, 0x3F],\n  [0x5B, 0x60],\n  [0x7B, 0x7E],\n];\nconst JAPANESE_FULLWIDTH_PUNCTUATION_RANGES = [\n  [0x3001, 0x303E],\n  [0x30FB, 0x30FC],\n  [0xFF01, 0xFF0F],\n  [0xFF1A, 0xFF1F],\n  [0xFF3B, 0xFF3F],\n  [0xFF5B, 0xFF60],\n];\nconst LOWERCASE_START = 0x61;\nconst LOWERCASE_END = 0x7A;\nconst UPPERCASE_START = 0x41;\nconst UPPERCASE_END = 0x5A;\nconst HIRAGANA_START = 0x3041;\nconst HIRAGANA_END = 0x3096;\nconst KATAKANA_START = 0x30A1;\nconst KATAKANA_END = 0x30FC;\nconst KANJI_START = 0x4E00;\nconst KANJI_END = 0x9FAF;\nconst LOWERCASE_FULLWIDTH_START = 0xFF41;\nconst LOWERCASE_FULLWIDTH_END = 0xFF5A;\nconst UPPERCASE_FULLWIDTH_START = 0xFF21;\nconst UPPERCASE_FULLWIDTH_END = 0xFF3A;\nconst PROLONGED_SOUND_MARK = 0x30FC;\nconst KANA_SLASH_DOT = 0x30FB;\n\n/**\n * All Japanese regex, for mixes of kanji and kana like \"泣き虫\"\n * Includes Japanese full-width punctuation ranges\n * Doesn't include *half-width katakana / roman letters* since they should be considered typos\n * @type {RegExp}\n */\nconst KANJI_KANA_REGEX = /[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff01-\\uff0f\\u4e00-\\u9faf\\u3400-\\u4dbf]/;\n\nconst LONG_VOWELS = {\n  a: 'あ',\n  i: 'い',\n  u: 'う',\n  e: 'え',\n  o: 'う',\n};\n\nconst FOUR_CHAR_EDGECASES = [\n  'lts',\n  'chy',\n  'shy',\n];\n\nconst FROM_ROMAJI = {\n  '.': '。',\n  ',': '、',\n  '/': '・',\n  '!': '！',\n  '?': '？',\n  '~': '〜',\n  '-': 'ー',\n  '[': '「',\n  ']': '」',\n  '(': '（',\n  ')': '）',\n  '{': '｛',\n  '}': '｝',\n\n  'a': 'あ',\n  'i': 'い',\n  'u': 'う',\n  'e': 'え',\n  'o': 'お',\n  'yi': 'い',\n  'wu': 'う',\n  'whu': 'う',\n  'xa': 'ぁ',\n  'xi': 'ぃ',\n  'xu': 'ぅ',\n  'xe': 'ぇ',\n  'xo': 'ぉ',\n  'xyi': 'ぃ',\n  'xye': 'ぇ',\n  'ye': 'いぇ',\n  'wha': 'うぁ',\n  'whi': 'うぃ',\n  'whe': 'うぇ',\n  'who': 'うぉ',\n  'wi': 'うぃ',\n  'we': 'うぇ',\n  'va': 'ゔぁ',\n  'vi': 'ゔぃ',\n  'vu': 'ゔ',\n  've': 'ゔぇ',\n  'vo': 'ゔぉ',\n  'vya': 'ゔゃ',\n  'vyi': 'ゔぃ',\n  'vyu': 'ゔゅ',\n  'vye': 'ゔぇ',\n  'vyo': 'ゔょ',\n  'ka': 'か',\n  'ki': 'き',\n  'ku': 'く',\n  'ke': 'け',\n  'ko': 'こ',\n  'lka': 'ヵ',\n  'lke': 'ヶ',\n  'xka': 'ヵ',\n  'xke': 'ヶ',\n  'kya': 'きゃ',\n  'kyi': 'きぃ',\n  'kyu': 'きゅ',\n  'kye': 'きぇ',\n  'kyo': 'きょ',\n  'ca': 'か',\n  'ci': 'き',\n  'cu': 'く',\n  'ce': 'け',\n  'co': 'こ',\n  'lca': 'ヵ',\n  'lce': 'ヶ',\n  'xca': 'ヵ',\n  'xce': 'ヶ',\n  'qya': 'くゃ',\n  'qyu': 'くゅ',\n  'qyo': 'くょ',\n  'qwa': 'くぁ',\n  'qwi': 'くぃ',\n  'qwu': 'くぅ',\n  'qwe': 'くぇ',\n  'qwo': 'くぉ',\n  'qa': 'くぁ',\n  'qi': 'くぃ',\n  'qe': 'くぇ',\n  'qo': 'くぉ',\n  'kwa': 'くぁ',\n  'qyi': 'くぃ',\n  'qye': 'くぇ',\n  'ga': 'が',\n  'gi': 'ぎ',\n  'gu': 'ぐ',\n  'ge': 'げ',\n  'go': 'ご',\n  'gya': 'ぎゃ',\n  'gyi': 'ぎぃ',\n  'gyu': 'ぎゅ',\n  'gye': 'ぎぇ',\n  'gyo': 'ぎょ',\n  'gwa': 'ぐぁ',\n  'gwi': 'ぐぃ',\n  'gwu': 'ぐぅ',\n  'gwe': 'ぐぇ',\n  'gwo': 'ぐぉ',\n  'sa': 'さ',\n  'si': 'し',\n  'shi': 'し',\n  'su': 'す',\n  'se': 'せ',\n  'so': 'そ',\n  'za': 'ざ',\n  'zi': 'じ',\n  'zu': 'ず',\n  'ze': 'ぜ',\n  'zo': 'ぞ',\n  'ji': 'じ',\n  'sya': 'しゃ',\n  'syi': 'しぃ',\n  'syu': 'しゅ',\n  'sye': 'しぇ',\n  'syo': 'しょ',\n  'sha': 'しゃ',\n  'shu': 'しゅ',\n  'she': 'しぇ',\n  'sho': 'しょ',\n  'shya': 'しゃ', // 4 character code\n  'shyu': 'しゅ', // 4 character code\n  'shye': 'しぇ', // 4 character code\n  'shyo': 'しょ', // 4 character code\n  'swa': 'すぁ',\n  'swi': 'すぃ',\n  'swu': 'すぅ',\n  'swe': 'すぇ',\n  'swo': 'すぉ',\n  'zya': 'じゃ',\n  'zyi': 'じぃ',\n  'zyu': 'じゅ',\n  'zye': 'じぇ',\n  'zyo': 'じょ',\n  'ja': 'じゃ',\n  'ju': 'じゅ',\n  'je': 'じぇ',\n  'jo': 'じょ',\n  'jya': 'じゃ',\n  'jyi': 'じぃ',\n  'jyu': 'じゅ',\n  'jye': 'じぇ',\n  'jyo': 'じょ',\n  'ta': 'た',\n  'ti': 'ち',\n  'tu': 'つ',\n  'te': 'て',\n  'to': 'と',\n  'chi': 'ち',\n  'tsu': 'つ',\n  'ltu': 'っ',\n  'xtu': 'っ',\n  'tya': 'ちゃ',\n  'tyi': 'ちぃ',\n  'tyu': 'ちゅ',\n  'tye': 'ちぇ',\n  'tyo': 'ちょ',\n  'cha': 'ちゃ',\n  'chu': 'ちゅ',\n  'che': 'ちぇ',\n  'cho': 'ちょ',\n  'cya': 'ちゃ',\n  'cyi': 'ちぃ',\n  'cyu': 'ちゅ',\n  'cye': 'ちぇ',\n  'cyo': 'ちょ',\n  'chya': 'ちゃ', // 4 character code\n  'chyu': 'ちゅ', // 4 character code\n  'chye': 'ちぇ', // 4 character code\n  'chyo': 'ちょ', // 4 character code\n  'tsa': 'つぁ',\n  'tsi': 'つぃ',\n  'tse': 'つぇ',\n  'tso': 'つぉ',\n  'tha': 'てゃ',\n  'thi': 'てぃ',\n  'thu': 'てゅ',\n  'the': 'てぇ',\n  'tho': 'てょ',\n  'twa': 'とぁ',\n  'twi': 'とぃ',\n  'twu': 'とぅ',\n  'twe': 'とぇ',\n  'two': 'とぉ',\n  'da': 'だ',\n  'di': 'ぢ',\n  'du': 'づ',\n  'de': 'で',\n  'do': 'ど',\n  'dya': 'ぢゃ',\n  'dyi': 'ぢぃ',\n  'dyu': 'ぢゅ',\n  'dye': 'ぢぇ',\n  'dyo': 'ぢょ',\n  'dha': 'でゃ',\n  'dhi': 'でぃ',\n  'dhu': 'でゅ',\n  'dhe': 'でぇ',\n  'dho': 'でょ',\n  'dwa': 'どぁ',\n  'dwi': 'どぃ',\n  'dwu': 'どぅ',\n  'dwe': 'どぇ',\n  'dwo': 'どぉ',\n  'na': 'な',\n  'ni': 'に',\n  'nu': 'ぬ',\n  'ne': 'ね',\n  'no': 'の',\n  'nya': 'にゃ',\n  'nyi': 'にぃ',\n  'nyu': 'にゅ',\n  'nye': 'にぇ',\n  'nyo': 'にょ',\n  'ha': 'は',\n  'hi': 'ひ',\n  'hu': 'ふ',\n  'he': 'へ',\n  'ho': 'ほ',\n  'fu': 'ふ',\n  'hya': 'ひゃ',\n  'hyi': 'ひぃ',\n  'hyu': 'ひゅ',\n  'hye': 'ひぇ',\n  'hyo': 'ひょ',\n  'fya': 'ふゃ',\n  'fyu': 'ふゅ',\n  'fyo': 'ふょ',\n  'fwa': 'ふぁ',\n  'fwi': 'ふぃ',\n  'fwu': 'ふぅ',\n  'fwe': 'ふぇ',\n  'fwo': 'ふぉ',\n  'fa': 'ふぁ',\n  'fi': 'ふぃ',\n  'fe': 'ふぇ',\n  'fo': 'ふぉ',\n  'fyi': 'ふぃ',\n  'fye': 'ふぇ',\n  'ba': 'ば',\n  'bi': 'び',\n  'bu': 'ぶ',\n  'be': 'べ',\n  'bo': 'ぼ',\n  'bya': 'びゃ',\n  'byi': 'びぃ',\n  'byu': 'びゅ',\n  'bye': 'びぇ',\n  'byo': 'びょ',\n  'pa': 'ぱ',\n  'pi': 'ぴ',\n  'pu': 'ぷ',\n  'pe': 'ぺ',\n  'po': 'ぽ',\n  'pya': 'ぴゃ',\n  'pyi': 'ぴぃ',\n  'pyu': 'ぴゅ',\n  'pye': 'ぴぇ',\n  'pyo': 'ぴょ',\n  'ma': 'ま',\n  'mi': 'み',\n  'mu': 'む',\n  'me': 'め',\n  'mo': 'も',\n  'mya': 'みゃ',\n  'myi': 'みぃ',\n  'myu': 'みゅ',\n  'mye': 'みぇ',\n  'myo': 'みょ',\n  'ya': 'や',\n  'yu': 'ゆ',\n  'yo': 'よ',\n  'xya': 'ゃ',\n  'xyu': 'ゅ',\n  'xyo': 'ょ',\n  'ra': 'ら',\n  'ri': 'り',\n  'ru': 'る',\n  're': 'れ',\n  'ro': 'ろ',\n  'rya': 'りゃ',\n  'ryi': 'りぃ',\n  'ryu': 'りゅ',\n  'rye': 'りぇ',\n  'ryo': 'りょ',\n  'la': 'ら',\n  'li': 'り',\n  'lu': 'る',\n  'le': 'れ',\n  'lo': 'ろ',\n  'lya': 'りゃ',\n  'lyi': 'りぃ',\n  'lyu': 'りゅ',\n  'lye': 'りぇ',\n  'lyo': 'りょ',\n  'wa': 'わ',\n  'wo': 'を',\n  'lwe': 'ゎ',\n  'xwa': 'ゎ',\n  'n': 'ん',\n  'nn': 'ん',\n  'n ': 'ん', // n + space\n  'xn': 'ん',\n  'ltsu': 'っ',  // 4 character code\n};\n\nconst TO_ROMAJI = {\n  '　': ' ',\n  '！': '!',\n  '？': '?',\n  '。': '.',\n  '・': '/',\n  '、': ',',\n  '〜': '~',\n  'ー': '-',\n  '「': '[',\n  '」': ']',\n  '（': '(',\n  '）': ')',\n  '｛': '{',\n  '｝': '}',\n\n  'あ': 'a',\n  'い': 'i',\n  'う': 'u',\n  'え': 'e',\n  'お': 'o',\n  'ゔぁ': 'va',\n  'ゔぃ': 'vi',\n  'ゔ': 'vu',\n  'ゔぇ': 've',\n  'ゔぉ': 'vo',\n  'か': 'ka',\n  'き': 'ki',\n  'きゃ': 'kya',\n  'きぃ': 'kyi',\n  'きゅ': 'kyu',\n  'く': 'ku',\n  'け': 'ke',\n  'こ': 'ko',\n  'が': 'ga',\n  'ぎ': 'gi',\n  'ぐ': 'gu',\n  'げ': 'ge',\n  'ご': 'go',\n  'ぎゃ': 'gya',\n  'ぎぃ': 'gyi',\n  'ぎゅ': 'gyu',\n  'ぎぇ': 'gye',\n  'ぎょ': 'gyo',\n  'さ': 'sa',\n  'す': 'su',\n  'せ': 'se',\n  'そ': 'so',\n  'ざ': 'za',\n  'ず': 'zu',\n  'ぜ': 'ze',\n  'ぞ': 'zo',\n  'し': 'shi',\n  'しゃ': 'sha',\n  'しゅ': 'shu',\n  'しょ': 'sho',\n  'じ': 'ji',\n  'じゃ': 'ja',\n  'じゅ': 'ju',\n  'じょ': 'jo',\n  'た': 'ta',\n  'ち': 'chi',\n  'ちゃ': 'cha',\n  'ちゅ': 'chu',\n  'ちょ': 'cho',\n  'つ': 'tsu',\n  'て': 'te',\n  'と': 'to',\n  'だ': 'da',\n  'ぢ': 'di',\n  'づ': 'du',\n  'で': 'de',\n  'ど': 'do',\n  'な': 'na',\n  'に': 'ni',\n  'にゃ': 'nya',\n  'にゅ': 'nyu',\n  'にょ': 'nyo',\n  'ぬ': 'nu',\n  'ね': 'ne',\n  'の': 'no',\n  'は': 'ha',\n  'ひ': 'hi',\n  'ふ': 'fu',\n  'へ': 'he',\n  'ほ': 'ho',\n  'ひゃ': 'hya',\n  'ひゅ': 'hyu',\n  'ひょ': 'hyo',\n  'ふぁ': 'fa',\n  'ふぃ': 'fi',\n  'ふぇ': 'fe',\n  'ふぉ': 'fo',\n  'ば': 'ba',\n  'び': 'bi',\n  'ぶ': 'bu',\n  'べ': 'be',\n  'ぼ': 'bo',\n  'びゃ': 'bya',\n  'びゅ': 'byu',\n  'びょ': 'byo',\n  'ぱ': 'pa',\n  'ぴ': 'pi',\n  'ぷ': 'pu',\n  'ぺ': 'pe',\n  'ぽ': 'po',\n  'ぴゃ': 'pya',\n  'ぴゅ': 'pyu',\n  'ぴょ': 'pyo',\n  'ま': 'ma',\n  'み': 'mi',\n  'む': 'mu',\n  'め': 'me',\n  'も': 'mo',\n  'みゃ': 'mya',\n  'みゅ': 'myu',\n  'みょ': 'myo',\n  'や': 'ya',\n  'ゆ': 'yu',\n  'よ': 'yo',\n  'ら': 'ra',\n  'り': 'ri',\n  'る': 'ru',\n  'れ': 're',\n  'ろ': 'ro',\n  'りゃ': 'rya',\n  'りゅ': 'ryu',\n  'りょ': 'ryo',\n  'わ': 'wa',\n  'を': 'wo',\n  'ん': 'n',\n\n  // Archaic characters\n  'ゐ': 'wi',\n  'ゑ': 'we',\n\n  // Uncommon character combos\n  'きぇ': 'kye',\n  'きょ': 'kyo',\n  'じぃ': 'jyi',\n  'じぇ': 'jye',\n  'ちぃ': 'cyi',\n  'ちぇ': 'che',\n  'ひぃ': 'hyi',\n  'ひぇ': 'hye',\n  'びぃ': 'byi',\n  'びぇ': 'bye',\n  'ぴぃ': 'pyi',\n  'ぴぇ': 'pye',\n  'みぇ': 'mye',\n  'みぃ': 'myi',\n  'りぃ': 'ryi',\n  'りぇ': 'rye',\n  'にぃ': 'nyi',\n  'にぇ': 'nye',\n  'しぃ': 'syi',\n  'しぇ': 'she',\n  'いぇ': 'ye',\n  'うぁ': 'wha',\n  'うぉ': 'who',\n  'うぃ': 'wi',\n  'うぇ': 'we',\n  'ゔゃ': 'vya',\n  'ゔゅ': 'vyu',\n  'ゔょ': 'vyo',\n  'すぁ': 'swa',\n  'すぃ': 'swi',\n  'すぅ': 'swu',\n  'すぇ': 'swe',\n  'すぉ': 'swo',\n  'くゃ': 'qya',\n  'くゅ': 'qyu',\n  'くょ': 'qyo',\n  'くぁ': 'qwa',\n  'くぃ': 'qwi',\n  'くぅ': 'qwu',\n  'くぇ': 'qwe',\n  'くぉ': 'qwo',\n  'ぐぁ': 'gwa',\n  'ぐぃ': 'gwi',\n  'ぐぅ': 'gwu',\n  'ぐぇ': 'gwe',\n  'ぐぉ': 'gwo',\n  'つぁ': 'tsa',\n  'つぃ': 'tsi',\n  'つぇ': 'tse',\n  'つぉ': 'tso',\n  'てゃ': 'tha',\n  'てぃ': 'thi',\n  'てゅ': 'thu',\n  'てぇ': 'the',\n  'てょ': 'tho',\n  'とぁ': 'twa',\n  'とぃ': 'twi',\n  'とぅ': 'twu',\n  'とぇ': 'twe',\n  'とぉ': 'two',\n  'ぢゃ': 'dya',\n  'ぢぃ': 'dyi',\n  'ぢゅ': 'dyu',\n  'ぢぇ': 'dye',\n  'ぢょ': 'dyo',\n  'でゃ': 'dha',\n  'でぃ': 'dhi',\n  'でゅ': 'dhu',\n  'でぇ': 'dhe',\n  'でょ': 'dho',\n  'どぁ': 'dwa',\n  'どぃ': 'dwi',\n  'どぅ': 'dwu',\n  'どぇ': 'dwe',\n  'どぉ': 'dwo',\n  'ふぅ': 'fwu',\n  'ふゃ': 'fya',\n  'ふゅ': 'fyu',\n  'ふょ': 'fyo',\n\n  //  Small Characters (normally not transliterated alone)\n  'ぁ': 'a',\n  'ぃ': 'i',\n  'ぇ': 'e',\n  'ぅ': 'u',\n  'ぉ': 'o',\n  'ゃ': 'ya',\n  'ゅ': 'yu',\n  'ょ': 'yo',\n  'っ': '',\n  'ゕ': 'ka',\n  'ゖ': 'ka',\n  'ゎ': 'wa',\n\n  // Ambiguous consonant vowel pairs\n  'んあ': 'n\\'a',\n  'んい': 'n\\'i',\n  'んう': 'n\\'u',\n  'んえ': 'n\\'e',\n  'んお': 'n\\'o',\n  'んや': 'n\\'ya',\n  'んゆ': 'n\\'yu',\n  'んよ': 'n\\'yo',\n};\n\nexport {\n  DEFAULT_OPTIONS,\n  ENGLISH_PUNCTUATION_RANGES,\n  JAPANESE_FULLWIDTH_PUNCTUATION_RANGES,\n  LOWERCASE_START,\n  LOWERCASE_END,\n  UPPERCASE_START,\n  UPPERCASE_END,\n  HIRAGANA_START,\n  HIRAGANA_END,\n  KATAKANA_START,\n  KATAKANA_END,\n  KANJI_START,\n  KANJI_END,\n  LOWERCASE_FULLWIDTH_START,\n  LOWERCASE_FULLWIDTH_END,\n  UPPERCASE_FULLWIDTH_START,\n  UPPERCASE_FULLWIDTH_END,\n  PROLONGED_SOUND_MARK,\n  KANA_SLASH_DOT,\n  KANJI_KANA_REGEX,\n  // character tables\n  LONG_VOWELS,\n  FOUR_CHAR_EDGECASES,\n  FROM_ROMAJI,\n  TO_ROMAJI,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","import {\n  LOWERCASE_START,\n  UPPERCASE_START,\n  LOWERCASE_FULLWIDTH_START,\n  LOWERCASE_FULLWIDTH_END,\n  UPPERCASE_FULLWIDTH_START,\n  UPPERCASE_FULLWIDTH_END,\n} from '../constants';\n\nimport isCharInRange from './isCharInRange';\n\n/**\n * Converts all fullwidth roman letters in string to proper ASCII\n * @param  {String} text Full Width roman letters\n * @return {String} ASCII\n */\nfunction convertFullwidthCharsToASCII(text) {\n  const asciiChars = [...text].map((char) => {\n    const code = char.charCodeAt(0);\n    const lower = isCharInRange(char, LOWERCASE_FULLWIDTH_START, LOWERCASE_FULLWIDTH_END);\n    const upper = isCharInRange(char, UPPERCASE_FULLWIDTH_START, UPPERCASE_FULLWIDTH_END);\n    if (lower) {\n      return String.fromCharCode((code - LOWERCASE_FULLWIDTH_START) + LOWERCASE_START);\n    } else if (upper) {\n      return String.fromCharCode((code - UPPERCASE_FULLWIDTH_START) + UPPERCASE_START);\n    }\n    return char;\n  });\n\n  return asciiChars.join('');\n}\n\nexport default convertFullwidthCharsToASCII;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/convertFullwidthCharsToASCII.js","/**\n * Takes a character and a unicode range. Returns true if the char is in the range.\n * @param  {String}  char  unicode character\n * @param  {Number}  start unicode start range\n * @param  {Number}  end   unicode end range\n * @return {Boolean}\n */\nfunction isCharInRange(char, start, end) {\n  const code = char.charCodeAt(0);\n  return start <= code && code <= end;\n}\n\nexport default isCharInRange;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharInRange.js","import {\n  LONG_VOWELS,\n  KATAKANA_START,\n  HIRAGANA_START,\n  TO_ROMAJI,\n} from '../constants';\n\nimport isCharLongDash from '../utils/isCharLongDash';\nimport isCharSlashDot from '../utils/isCharSlashDot';\nimport isCharKatakana from '../utils/isCharKatakana';\n\n/**\n * Convert katakana to hiragana\n * @param  {String} kata text input\n * @return {String} converted text\n */\nfunction katakanaToHiragana(kata) {\n  const hira = [];\n  let previousKana = '';\n  const iterable = kata.split('');\n  for (let index = 0; index < iterable.length; index += 1) {\n    const kataChar = iterable[index];\n    const [slashDot, longDash] = [isCharSlashDot(kataChar), isCharLongDash(kataChar)];\n    // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n    if (slashDot || (longDash && index < 1)) {\n      hira.push(kataChar);\n    // Transform long vowels: 'オー' to 'おう'\n    } else if (longDash && index > 0) {\n      // Transform previousKana back to romaji, and slice off the vowel\n      const romaji = TO_ROMAJI[previousKana].slice(-1);\n      hira.push(LONG_VOWELS[romaji]);\n    } else if (isCharKatakana(kataChar)) {\n      // Shift charcode.\n      const code = kataChar.charCodeAt(0) + (HIRAGANA_START - KATAKANA_START);\n      const hiraChar = String.fromCharCode(code);\n      hira.push(hiraChar);\n      previousKana = hiraChar;\n    } else {\n      // Pass non katakana chars through\n      hira.push(kataChar);\n      previousKana = '';\n    }\n  }\n  return hira.join('');\n}\n\nexport default katakanaToHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/katakanaToHiragana.js","import { PROLONGED_SOUND_MARK } from '../constants';\n\n/**\n * Returns true if char is 'ー'\n * @param  {String} char to test\n * @return {Boolean}\n */\nfunction isCharLongDash(char) {\n  return char.charCodeAt(0) === PROLONGED_SOUND_MARK;\n}\n\nexport default isCharLongDash;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharLongDash.js","import { KANA_SLASH_DOT } from '../constants';\n\n/**\n * Tests if char is '・'\n * @param  {String} char\n * @return {Boolean} true if '・'\n */\nfunction isCharSlashDot(char) {\n  return char.charCodeAt(0) === KANA_SLASH_DOT;\n}\n\nexport default isCharSlashDot;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharSlashDot.js","import {\n  KATAKANA_START,\n  KATAKANA_END,\n} from '../constants';\n\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is katakana.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKatakana(char) {\n  return isCharInRange(char, KATAKANA_START, KATAKANA_END);\n}\n\nexport default isCharKatakana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharKatakana.js","import {\n  KATAKANA_START,\n  HIRAGANA_START,\n} from '../constants';\n\nimport isCharLongDash from '../utils/isCharLongDash';\nimport isCharSlashDot from '../utils/isCharSlashDot';\nimport isCharHiragana from '../utils/isCharHiragana';\n\n/**\n * Convert hiragana to katakana\n * @param  {String} hira text input\n * @return {String} converted text\n * @example\n * hiraganaToKatakana('ひらがな')\n * // => \"ヒラガナ\"\n */\nfunction hiraganaToKatakana(hira) {\n  const kata = [];\n  hira.split('').forEach((hiraChar) => {\n    // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n    if (isCharLongDash(hiraChar) || isCharSlashDot(hiraChar)) {\n      kata.push(hiraChar);\n    } else if (isCharHiragana(hiraChar)) {\n      // Shift charcode.\n      const code = hiraChar.charCodeAt(0) + (KATAKANA_START - HIRAGANA_START);\n      const kataChar = String.fromCharCode(code);\n      kata.push(kataChar);\n    } else {\n      // Pass non hiragana chars through\n      kata.push(hiraChar);\n    }\n  });\n  return kata.join('');\n}\n\nexport default hiraganaToKatakana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/hiraganaToKatakana.js","import {\n  HIRAGANA_START,\n  HIRAGANA_END,\n} from '../constants';\nimport isCharLongDash from './isCharLongDash';\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is Hiragana.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharHiragana(char) {\n  if (isCharLongDash(char)) return true;\n  return isCharInRange(char, HIRAGANA_START, HIRAGANA_END);\n}\n\nexport default isCharHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharHiragana.js","import romajiToKana from './romajiToKana';\n\n/**\n * Convert romaji to hiragana\n * @param  {String} roma text input\n * @param  {Object}\n * @return {String} converted text\n */\nfunction romajiToHiragana(roma, options) {\n  return romajiToKana(roma, options, true);\n}\n\nexport default romajiToHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/romajiToHiragana.js","import {\n  DEFAULT_OPTIONS,\n  UPPERCASE_START,\n  UPPERCASE_END,\n  FOUR_CHAR_EDGECASES,\n  FROM_ROMAJI,\n} from '../constants';\n\nimport isCharInRange from '../utils/isCharInRange';\nimport isCharUpperCase from '../utils/isCharUpperCase';\nimport getChunkSize from '../utils/getChunkSize';\nimport getChunk from '../utils/getChunk';\nimport isCharConsonant from '../utils/isCharConsonant';\nimport isCharVowel from '../utils/isCharVowel';\nimport isKana from './isKana';\nimport hiraganaToKatakana from './hiraganaToKatakana';\n\nfunction romajiToKana(roma, options = {}, ignoreCase = false) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options);\n  // Final output array\n  const kana = [];\n  // Position in the string that is being evaluated\n  let cursor = 0;\n  const len = roma.length;\n  const maxChunk = 3;\n  let chunkSize = 3;\n  let chunk = '';\n  let chunkLC = '';\n\n  // Steps through the string pulling out chunks of characters. Each chunk will be evaluated\n  // against the romaji to kana table. If there is no match, the last character in the chunk\n  // is dropped and the chunk is reevaluated. If nothing matches, the character is assumed\n  // to be invalid or punctuation or other and gets passed through.\n  while (cursor < len) {\n    let kanaChar = null;\n    chunkSize = getChunkSize(maxChunk, len - cursor);\n    while (chunkSize > 0) {\n      chunk = getChunk(roma, cursor, cursor + chunkSize);\n      chunkLC = chunk.toLowerCase();\n      // Handle super-rare edge cases with 4 char chunks (like ltsu, chya, shya)\n      if (FOUR_CHAR_EDGECASES.includes(chunkLC) && (len - cursor) >= 4) {\n        chunkSize += 1;\n        chunk = getChunk(roma, cursor, cursor + chunkSize);\n        chunkLC = chunk.toLowerCase();\n      } else {\n        // Handle edge case of n followed by consonant\n        if (chunkLC.charAt(0) === 'n') {\n          if (chunkSize === 2) {\n            // Handle edge case of n followed by a space (only if not in IME mode)\n            if (!config.IMEMode && chunkLC.charAt(1) === ' ') {\n              kanaChar = 'ん ';\n              break;\n            }\n            // Convert IME input of n' to \"ん\"\n            if (config.IMEMode && chunkLC === \"n'\") {\n              kanaChar = 'ん';\n              break;\n            }\n          }\n          // Handle edge case of n followed by n and vowel\n          if (isCharConsonant(chunkLC.charAt(1), false) && isCharVowel(chunkLC.charAt(2))) {\n            chunkSize = 1;\n            chunk = getChunk(roma, cursor, cursor + chunkSize);\n            chunkLC = chunk.toLowerCase();\n          }\n        }\n\n        // Handle case of double consonants\n        if (chunkLC.charAt(0) !== 'n' &&\n          isCharConsonant(chunkLC.charAt(0)) &&\n          chunk.charAt(0) === chunk.charAt(1)\n        ) {\n          chunkSize = 1;\n          // Return katakana ッ if chunk is uppercase, otherwise return hiragana っ\n          if (isCharInRange(chunk.charAt(0), UPPERCASE_START, UPPERCASE_END)) {\n            chunkLC = chunk = 'ッ';\n          } else {\n            chunkLC = chunk = 'っ';\n          }\n        }\n      }\n\n      kanaChar = FROM_ROMAJI[chunkLC];\n      // console.log(`${cursor}x${chunkSize}:${chunk} => ${kanaChar}`); // DEBUG\n      if (kanaChar != null) {\n        break;\n      }\n      // Step down the chunk size.\n      // If chunkSize was 4, step down twice.\n      if (chunkSize === 4) {\n        chunkSize -= 2;\n      } else {\n        chunkSize -= 1;\n      }\n    }\n\n    // Passthrough undefined values\n    if (kanaChar == null) {\n      kanaChar = chunk;\n    }\n\n    // Handle special cases.\n    if (config.useObsoleteKana) {\n      if (chunkLC === 'wi') kanaChar = 'ゐ';\n      if (chunkLC === 'we') kanaChar = 'ゑ';\n    }\n\n    if (!!config.IMEMode && chunkLC.charAt(0) === 'n') {\n      if ((roma.charAt(cursor + 1).toLowerCase() === 'y' &&\n        isCharVowel(roma.charAt(cursor + 2)) === false) ||\n        cursor === (len - 1) ||\n        isKana(roma.charAt(cursor + 1))\n      ) {\n        // Don't transliterate this yet.\n        kanaChar = chunk.charAt(0);\n      }\n    }\n\n    // Use katakana if first letter in chunk is uppercase\n    if (!ignoreCase) {\n      if (isCharUpperCase(chunk.charAt(0))) {\n        kanaChar = hiraganaToKatakana(kanaChar);\n      }\n    }\n\n    kana.push(kanaChar);\n    cursor += chunkSize || 1;\n  }\n\n  return kana.join('');\n}\n\nexport default romajiToKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/romajiToKana.js","import {\n  UPPERCASE_START,\n  UPPERCASE_END,\n} from '../constants';\n\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests if char is in English unicode uppercase range\n * @param  {String} char\n * @return {Boolean}\n */\nfunction isCharUpperCase(char) {\n  return isCharInRange(char, UPPERCASE_START, UPPERCASE_END);\n}\n\nexport default isCharUpperCase;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharUpperCase.js","/**\n * Limits picking chunk size to be no bigger than the remaining characters.\n * @param  {Number} max index limit\n * @param  {Number} remaining\n * @return {Number}\n */\nfunction getChunkSize(max, remaining) {\n  return Math.min(max, remaining);\n}\n\nexport default getChunkSize;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/getChunkSize.js","/**\n * Returns a substring based on start/end values\n * @param  {String} text\n * @param  {Number} start index\n * @param  {Number} end index\n * @return {String} new substring\n */\nfunction getChunk(text, start, end) {\n  return text.slice(start, end);\n}\n\nexport default getChunk;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/getChunk.js","/**\n * Tests a character and an english consonant. Returns true if the char is a consonant.\n * @param  {String} char\n * @param  {Boolean} [includeY=true] Optional parameter to include y as a consonant in test\n * @return {Boolean}\n */\nfunction isCharConsonant(char, includeY = true) {\n  const regexp = includeY ? /[bcdfghjklmnpqrstvwxyz]/ : /[bcdfghjklmnpqrstvwxz]/;\n  return char.toLowerCase().charAt(0).search(regexp) !== -1;\n}\n\nexport default isCharConsonant;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharConsonant.js","/**\n * Tests a character and an english vowel. Returns true if the char is a vowel.\n * @param  {String} char\n * @param  {Boolean} [includeY=true] Optional parameter to include y as a vowel in test\n * @return {Boolean}\n */\nfunction isCharVowel(char, includeY = true) {\n  const regexp = includeY ? /[aeiouy]/ : /[aeiou]/;\n  return char.toLowerCase().charAt(0).search(regexp) !== -1;\n}\n\nexport default isCharVowel;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharVowel.js","import isCharKana from '../utils/isCharKana';\n\n/**\n * Test if all text is Katakana, Hiragana or both\n * @param  {String} input text to test\n * @return {Boolean} true if either Katakana or Hiragana, else false\n */\nfunction isKana(input) {\n  return [...input].every(isCharKana);\n}\n\nexport default isKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isKana.js","import isCharHiragana from './isCharHiragana';\nimport isCharKatakana from './isCharKatakana';\n\n/**\n * Tests a character. Returns true if the character is hiragana or katakana.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKana(char) {\n  return isCharHiragana(char) || isCharKatakana(char);\n}\n\nexport default isCharKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharKana.js","import isCharHiragana from '../utils/isCharHiragana';\n\n/**\n * Tests if all text is hiragana\n * @param  {String} input text to Tests\n * @return {Boolean} true if hiragana\n */\nfunction isHiragana(input) {\n  return [...input].every(isCharHiragana);\n}\n\nexport default isHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isHiragana.js","import isCharKatakana from '../utils/isCharKatakana';\n\n/**\n * Tests if all text is katakana\n * @param  {String} input text to Tests\n * @return {Boolean} true if katakana\n */\nfunction isKatakana(input) {\n  return [...input].every(isCharKatakana);\n}\n\nexport default isKatakana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isKatakana.js","import { KANJI_KANA_REGEX } from '../constants';\n\n/**\n * Test if input is All Japanese, for mixes of kanji and kana like \"泣き虫。\"\n * Includes Japanese full-width punctuation ranges\n * @param  {String} input text to test\n * @return {Boolean} true if ALL Japanese, else false\n */\nfunction isKanjiKana(input) {\n  return [...input].every((char) => KANJI_KANA_REGEX.test(char));\n}\n\nexport default isKanjiKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isKanjiKana.js","import isHiragana from './isHiragana';\nimport isKatakana from './isKatakana';\nimport isKanji from './isKanji';\n\n/**\n * Test if text is all Romaji (by determining that it isn't kana or kanji)\n * @param  {String} input text to test\n * @return {Boolean} true if not kana or kanji\n */\nexport default function isRomaji(input) {\n  return [...input].every((char) => !isHiragana(char) && !isKatakana(char) && !isKanji(char));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isRomaji.js","import isCharKanji from '../utils/isCharKanji';\n\n/**\n * Test if all chars are Kanji (CJK ideographs)\n * @param  {String} input text to test\n * @return {Boolean} true if all Kanji, else false\n */\nfunction isKanji(input) {\n  return [...input].every(isCharKanji);\n}\n\nexport default isKanji;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isKanji.js","import {\n  KANJI_START,\n  KANJI_END,\n} from '../constants';\n\nimport isCharInRange from './isCharInRange';\n/**\n * Tests a character. Returns true if the character is a CJK ideograph (kanji).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKanji(char) {\n  return isCharInRange(char, KANJI_START, KANJI_END);\n}\n\nexport default isCharKanji;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharKanji.js","import isKanji from './isKanji';\nimport isHiragana from './isHiragana';\nimport isKatakana from './isKatakana';\nimport isRomaji from './isRomaji';\n\n/**\n * Test if input is a mix of romaji and kana, defaults to skip kanji\n * @param  {String} input text\n * @param  {Object} [options={ passKanji: true }] optional config to skip over kanji\n * @return {Boolean} true if input is mixed\n */\nfunction isRomajiKana(input, options = { passKanji: true }) {\n  const chars = [...input];\n  let hasKanji = false;\n  if (!options.passKanji) {\n    hasKanji = chars.some(isKanji);\n  }\n  return (chars.some(isHiragana) || chars.some(isKatakana)) && chars.some(isRomaji) && !hasKanji;\n}\n\nexport default isRomajiKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/isRomajiKana.js","import { DEFAULT_OPTIONS } from '../constants';\nimport katakanaToHiragana from './katakanaToHiragana';\nimport isRomaji from './isRomaji';\nimport isRomajiKana from './isRomajiKana';\nimport romajiToHiragana from './romajiToHiragana';\n\n\nfunction toHiragana(input, options = {}) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options);\n  if (config.passRomaji) return katakanaToHiragana(input);\n  if (isRomaji(input)) return romajiToHiragana(input, config);\n  if (isRomajiKana(input, { passKanji: true })) {\n    const romaji = katakanaToHiragana(input);\n    return romajiToHiragana(romaji, config);\n  }\n  return katakanaToHiragana(input);\n}\n\nexport default toHiragana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/toHiragana.js","import { DEFAULT_OPTIONS } from '../constants';\nimport hiraganaToKatakana from './hiraganaToKatakana';\nimport isRomaji from './isRomaji';\nimport isRomajiKana from './isRomajiKana';\nimport romajiToHiragana from './romajiToHiragana';\n\nfunction toKatakana(input, options = {}) {\n  const config = Object.assign({}, DEFAULT_OPTIONS, options);\n  if (config.passRomaji) return hiraganaToKatakana(input);\n  if (isRomaji(input) || isRomajiKana(input)) {\n    const romaji = romajiToHiragana(input, config);\n    return hiraganaToKatakana(romaji);\n  }\n  return hiraganaToKatakana(input);\n}\n\nexport default toKatakana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/toKatakana.js","import romajiToKana from './romajiToKana';\n\nfunction toKana(input, options) {\n  return romajiToKana(input, options);\n}\n\nexport default toKana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/toKana.js","import hiraganaToRomaji from './hiraganaToRomaji';\n\nfunction toRomaji(input, options) {\n  return hiraganaToRomaji(input, options);\n}\n\nexport default toRomaji;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/toRomaji.js","import {\n  DEFAULT_OPTIONS,\n  TO_ROMAJI,\n} from '../constants';\nimport getChunkSize from '../utils/getChunkSize';\nimport getChunk from '../utils/getChunk';\nimport isKatakana from './isKatakana';\nimport katakanaToHiragana from './katakanaToHiragana';\n\n/**\n * Convert hiragana to romaji\n * @param  {String} hira text input\n * @return {String} converted text\n * @example\n * hiraganaToRomaji('ひらがな')\n * // => \"hiragana\"\n */\n\nfunction hiraganaToRomaji(hira, options = {}) {\n  // merge options with default options\n  const config = Object.assign({}, DEFAULT_OPTIONS, options);\n  const len = hira.length;\n  // Final output array\n  const roma = [];\n  // Position in the string that is being evaluated\n  let cursor = 0;\n  const maxChunk = 2;\n  let chunkSize = 2;\n  let chunk = '';\n  let romaChar = '';\n  let nextCharIsDoubleConsonant;\n\n  while (cursor < len) {\n    chunkSize = getChunkSize(maxChunk, len - cursor);\n    let convertThisChunkToUppercase = false;\n    while (chunkSize > 0) {\n      chunk = getChunk(hira, cursor, cursor + chunkSize);\n      if (isKatakana(chunk)) {\n        convertThisChunkToUppercase = config.convertKatakanaToUppercase;\n        chunk = katakanaToHiragana(chunk);\n      }\n      // special case for small tsus\n      if (chunk.charAt(0) === 'っ' && chunkSize === 1 && cursor < (len - 1)) {\n        nextCharIsDoubleConsonant = true;\n        romaChar = '';\n        break;\n      }\n\n      romaChar = TO_ROMAJI[chunk];\n\n      if ((romaChar != null) && nextCharIsDoubleConsonant) {\n        romaChar = romaChar.charAt(0).concat(romaChar);\n        nextCharIsDoubleConsonant = false;\n      }\n      // console.log(`${cursor}x${chunkSize}:${chunk} => ${romaChar}`);\n      if (romaChar != null) {\n        break;\n      }\n      chunkSize -= 1;\n    }\n    if (romaChar == null) {\n      // Passthrough undefined values\n      romaChar = chunk;\n    }\n\n    if (convertThisChunkToUppercase) {\n      romaChar = romaChar.toUpperCase();\n    }\n    roma.push(romaChar);\n    cursor += chunkSize || 1;\n  }\n  return roma.join('');\n}\n\nexport default hiraganaToRomaji;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/hiraganaToRomaji.js","import isCharKana from '../utils/isCharKana';\nimport isCharPunctuation from '../utils/isCharPunctuation';\nimport isKanjiKana from './isKanjiKana';\nimport isKana from './isKana';\nimport isKanji from './isKanji';\n\n/**\n * Strips trailing okurigana if input is a mix of kanji and kana\n * @param  {String} input text to parse\n * @param  {Object} [options={ all: false }] config object specifying if *all* kana should be removed\n * @return {String} string new string with trailing okurigana removed\n */\nfunction stripOkurigana(input, options = { all: false }) {\n  if (!isKanjiKana(input) || isKana(input)) return input;\n  const chars = [...input];\n\n  // strip every kana\n  if (options.all) return chars.filter((char) => !isCharKana(char)).join('');\n\n  // strip trailing only\n  const reverseChars = chars.reverse();\n  for (let i = 0, len = reverseChars.length; i < len; i += 1) {\n    const char = reverseChars[i];\n    // pass if it's punctuation\n    if (isCharPunctuation(char)) continue; // eslint-disable-line no-continue\n    // blank out if not kanji\n    if (!isKanji(char)) {\n      reverseChars[i] = '';\n    } else break; // stop when we hit a kanji char\n  }\n\n  return reverseChars.reverse().join('');\n}\n\nexport default stripOkurigana;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/stripOkurigana.js","import isCharEnglishPunctuation from './isCharEnglishPunctuation';\nimport isCharJapanesePunctuation from './isCharJapanesePunctuation';\n\n/**\n * Tests a character. Returns true if the character is considered Japanese or English punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharPunctuation(char) {\n  return isCharEnglishPunctuation(char) || isCharJapanesePunctuation(char);\n}\n\nexport default isCharPunctuation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharPunctuation.js","import { ENGLISH_PUNCTUATION_RANGES } from '../constants';\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is considered English punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharEnglishPunctuation(char) {\n  return ENGLISH_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nexport default isCharEnglishPunctuation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharEnglishPunctuation.js","import { JAPANESE_FULLWIDTH_PUNCTUATION_RANGES } from '../constants';\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is considered Japanese punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharJapanesePunctuation(char) {\n  return JAPANESE_FULLWIDTH_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nexport default isCharJapanesePunctuation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/isCharJapanesePunctuation.js"],"sourceRoot":""}